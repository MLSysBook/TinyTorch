# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/TinyTorch/',
                'doc_host': 'https://tinytorch.github.io',
                'git_url': 'https://github.com/tinytorch/TinyTorch/',
                'lib_path': 'tinytorch'},
  'syms': { 'tinytorch.core.activations': { 'tinytorch.core.activations.ActivationProfiler': ( '03_activations/activations_dev.html#activationprofiler',
                                                                                               'tinytorch/core/activations.py'),
                                            'tinytorch.core.activations.ActivationProfiler.__init__': ( '03_activations/activations_dev.html#activationprofiler.__init__',
                                                                                                        'tinytorch/core/activations.py'),
                                            'tinytorch.core.activations.ActivationProfiler.analyze_scaling': ( '03_activations/activations_dev.html#activationprofiler.analyze_scaling',
                                                                                                               'tinytorch/core/activations.py'),
                                            'tinytorch.core.activations.ActivationProfiler.compare_activations': ( '03_activations/activations_dev.html#activationprofiler.compare_activations',
                                                                                                                   'tinytorch/core/activations.py'),
                                            'tinytorch.core.activations.ActivationProfiler.time_activation': ( '03_activations/activations_dev.html#activationprofiler.time_activation',
                                                                                                               'tinytorch/core/activations.py'),
                                            'tinytorch.core.activations.ReLU': ( '03_activations/activations_dev.html#relu',
                                                                                 'tinytorch/core/activations.py'),
                                            'tinytorch.core.activations.ReLU.__call__': ( '03_activations/activations_dev.html#relu.__call__',
                                                                                          'tinytorch/core/activations.py'),
                                            'tinytorch.core.activations.ReLU.forward': ( '03_activations/activations_dev.html#relu.forward',
                                                                                         'tinytorch/core/activations.py'),
                                            'tinytorch.core.activations.Sigmoid': ( '03_activations/activations_dev.html#sigmoid',
                                                                                    'tinytorch/core/activations.py'),
                                            'tinytorch.core.activations.Sigmoid.__call__': ( '03_activations/activations_dev.html#sigmoid.__call__',
                                                                                             'tinytorch/core/activations.py'),
                                            'tinytorch.core.activations.Sigmoid.forward': ( '03_activations/activations_dev.html#sigmoid.forward',
                                                                                            'tinytorch/core/activations.py'),
                                            'tinytorch.core.activations.Softmax': ( '03_activations/activations_dev.html#softmax',
                                                                                    'tinytorch/core/activations.py'),
                                            'tinytorch.core.activations.Softmax.__call__': ( '03_activations/activations_dev.html#softmax.__call__',
                                                                                             'tinytorch/core/activations.py'),
                                            'tinytorch.core.activations.Softmax.forward': ( '03_activations/activations_dev.html#softmax.forward',
                                                                                            'tinytorch/core/activations.py'),
                                            'tinytorch.core.activations.Tanh': ( '03_activations/activations_dev.html#tanh',
                                                                                 'tinytorch/core/activations.py'),
                                            'tinytorch.core.activations.Tanh.__call__': ( '03_activations/activations_dev.html#tanh.__call__',
                                                                                          'tinytorch/core/activations.py'),
                                            'tinytorch.core.activations.Tanh.forward': ( '03_activations/activations_dev.html#tanh.forward',
                                                                                         'tinytorch/core/activations.py'),
                                            'tinytorch.core.activations.benchmark_activation_suite': ( '03_activations/activations_dev.html#benchmark_activation_suite',
                                                                                                       'tinytorch/core/activations.py')},
            'tinytorch.core.attention': { 'tinytorch.core.attention.AttentionEfficiencyProfiler': ( '07_attention/attention_dev.html#attentionefficiencyprofiler',
                                                                                                    'tinytorch/core/attention.py'),
                                          'tinytorch.core.attention.AttentionEfficiencyProfiler.__init__': ( '07_attention/attention_dev.html#attentionefficiencyprofiler.__init__',
                                                                                                             'tinytorch/core/attention.py'),
                                          'tinytorch.core.attention.AttentionEfficiencyProfiler._analyze_attention_scaling': ( '07_attention/attention_dev.html#attentionefficiencyprofiler._analyze_attention_scaling',
                                                                                                                               'tinytorch/core/attention.py'),
                                          'tinytorch.core.attention.AttentionEfficiencyProfiler._generate_attention_optimizations': ( '07_attention/attention_dev.html#attentionefficiencyprofiler._generate_attention_optimizations',
                                                                                                                                      'tinytorch/core/attention.py'),
                                          'tinytorch.core.attention.AttentionEfficiencyProfiler.analyze_multi_head_efficiency': ( '07_attention/attention_dev.html#attentionefficiencyprofiler.analyze_multi_head_efficiency',
                                                                                                                                  'tinytorch/core/attention.py'),
                                          'tinytorch.core.attention.AttentionEfficiencyProfiler.profile_attention_scaling': ( '07_attention/attention_dev.html#attentionefficiencyprofiler.profile_attention_scaling',
                                                                                                                              'tinytorch/core/attention.py'),
                                          'tinytorch.core.attention.SelfAttention': ( '07_attention/attention_dev.html#selfattention',
                                                                                      'tinytorch/core/attention.py'),
                                          'tinytorch.core.attention.SelfAttention.__call__': ( '07_attention/attention_dev.html#selfattention.__call__',
                                                                                               'tinytorch/core/attention.py'),
                                          'tinytorch.core.attention.SelfAttention.__init__': ( '07_attention/attention_dev.html#selfattention.__init__',
                                                                                               'tinytorch/core/attention.py'),
                                          'tinytorch.core.attention.SelfAttention.forward': ( '07_attention/attention_dev.html#selfattention.forward',
                                                                                              'tinytorch/core/attention.py'),
                                          'tinytorch.core.attention.create_bidirectional_mask': ( '07_attention/attention_dev.html#create_bidirectional_mask',
                                                                                                  'tinytorch/core/attention.py'),
                                          'tinytorch.core.attention.create_causal_mask': ( '07_attention/attention_dev.html#create_causal_mask',
                                                                                           'tinytorch/core/attention.py'),
                                          'tinytorch.core.attention.create_padding_mask': ( '07_attention/attention_dev.html#create_padding_mask',
                                                                                            'tinytorch/core/attention.py'),
                                          'tinytorch.core.attention.scaled_dot_product_attention': ( '07_attention/attention_dev.html#scaled_dot_product_attention',
                                                                                                     'tinytorch/core/attention.py')},
            'tinytorch.core.autograd': {},
            'tinytorch.core.benchmarking': { 'tinytorch.core.benchmarking.BenchmarkResult': ( '14_benchmarking/benchmarking_dev.html#benchmarkresult',
                                                                                              'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.BenchmarkScenario': ( '14_benchmarking/benchmarking_dev.html#benchmarkscenario',
                                                                                                'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.BenchmarkScenarios': ( '14_benchmarking/benchmarking_dev.html#benchmarkscenarios',
                                                                                                 'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.BenchmarkScenarios.__init__': ( '14_benchmarking/benchmarking_dev.html#benchmarkscenarios.__init__',
                                                                                                          'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.BenchmarkScenarios.offline': ( '14_benchmarking/benchmarking_dev.html#benchmarkscenarios.offline',
                                                                                                         'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.BenchmarkScenarios.server': ( '14_benchmarking/benchmarking_dev.html#benchmarkscenarios.server',
                                                                                                        'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.BenchmarkScenarios.single_stream': ( '14_benchmarking/benchmarking_dev.html#benchmarkscenarios.single_stream',
                                                                                                               'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.PerformanceReporter': ( '14_benchmarking/benchmarking_dev.html#performancereporter',
                                                                                                  'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.PerformanceReporter.__init__': ( '14_benchmarking/benchmarking_dev.html#performancereporter.__init__',
                                                                                                           'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.PerformanceReporter.generate_project_report': ( '14_benchmarking/benchmarking_dev.html#performancereporter.generate_project_report',
                                                                                                                          'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.PerformanceReporter.save_report': ( '14_benchmarking/benchmarking_dev.html#performancereporter.save_report',
                                                                                                              'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.ProductionBenchmarkingProfiler': ( '14_benchmarking/benchmarking_dev.html#productionbenchmarkingprofiler',
                                                                                                             'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.ProductionBenchmarkingProfiler.__init__': ( '14_benchmarking/benchmarking_dev.html#productionbenchmarkingprofiler.__init__',
                                                                                                                      'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.ProductionBenchmarkingProfiler._generate_ab_recommendation': ( '14_benchmarking/benchmarking_dev.html#productionbenchmarkingprofiler._generate_ab_recommendation',
                                                                                                                                         'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.ProductionBenchmarkingProfiler.detect_performance_regression': ( '14_benchmarking/benchmarking_dev.html#productionbenchmarkingprofiler.detect_performance_regression',
                                                                                                                                           'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.ProductionBenchmarkingProfiler.generate_capacity_planning_report': ( '14_benchmarking/benchmarking_dev.html#productionbenchmarkingprofiler.generate_capacity_planning_report',
                                                                                                                                               'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.ProductionBenchmarkingProfiler.monitor_resource_utilization': ( '14_benchmarking/benchmarking_dev.html#productionbenchmarkingprofiler.monitor_resource_utilization',
                                                                                                                                          'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.ProductionBenchmarkingProfiler.profile_end_to_end_pipeline': ( '14_benchmarking/benchmarking_dev.html#productionbenchmarkingprofiler.profile_end_to_end_pipeline',
                                                                                                                                         'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.ProductionBenchmarkingProfiler.run_ab_test': ( '14_benchmarking/benchmarking_dev.html#productionbenchmarkingprofiler.run_ab_test',
                                                                                                                         'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.ProductionBenchmarkingProfiler.setup_ab_testing_framework': ( '14_benchmarking/benchmarking_dev.html#productionbenchmarkingprofiler.setup_ab_testing_framework',
                                                                                                                                        'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.StatisticalValidation': ( '14_benchmarking/benchmarking_dev.html#statisticalvalidation',
                                                                                                    'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.StatisticalValidator': ( '14_benchmarking/benchmarking_dev.html#statisticalvalidator',
                                                                                                   'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.StatisticalValidator.__init__': ( '14_benchmarking/benchmarking_dev.html#statisticalvalidator.__init__',
                                                                                                            'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.StatisticalValidator.validate_benchmark_result': ( '14_benchmarking/benchmarking_dev.html#statisticalvalidator.validate_benchmark_result',
                                                                                                                             'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.StatisticalValidator.validate_comparison': ( '14_benchmarking/benchmarking_dev.html#statisticalvalidator.validate_comparison',
                                                                                                                       'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.TinyTorchPerf': ( '14_benchmarking/benchmarking_dev.html#tinytorchperf',
                                                                                            'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.TinyTorchPerf.__init__': ( '14_benchmarking/benchmarking_dev.html#tinytorchperf.__init__',
                                                                                                     'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.TinyTorchPerf.compare_models': ( '14_benchmarking/benchmarking_dev.html#tinytorchperf.compare_models',
                                                                                                           'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.TinyTorchPerf.generate_report': ( '14_benchmarking/benchmarking_dev.html#tinytorchperf.generate_report',
                                                                                                            'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.TinyTorchPerf.run_all_scenarios': ( '14_benchmarking/benchmarking_dev.html#tinytorchperf.run_all_scenarios',
                                                                                                              'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.TinyTorchPerf.run_offline': ( '14_benchmarking/benchmarking_dev.html#tinytorchperf.run_offline',
                                                                                                        'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.TinyTorchPerf.run_server': ( '14_benchmarking/benchmarking_dev.html#tinytorchperf.run_server',
                                                                                                       'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.TinyTorchPerf.run_single_stream': ( '14_benchmarking/benchmarking_dev.html#tinytorchperf.run_single_stream',
                                                                                                              'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.TinyTorchPerf.set_dataset': ( '14_benchmarking/benchmarking_dev.html#tinytorchperf.set_dataset',
                                                                                                        'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.TinyTorchPerf.set_model': ( '14_benchmarking/benchmarking_dev.html#tinytorchperf.set_model',
                                                                                                      'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.plot_benchmark_results': ( '14_benchmarking/benchmarking_dev.html#plot_benchmark_results',
                                                                                                     'tinytorch/core/benchmarking.py')},
            'tinytorch.core.cnn': { 'tinytorch.core.cnn.Conv2D': ('06_spatial/spatial_dev.html#conv2d', 'tinytorch/core/cnn.py'),
                                    'tinytorch.core.cnn.Conv2D.__call__': ( '06_spatial/spatial_dev.html#conv2d.__call__',
                                                                            'tinytorch/core/cnn.py'),
                                    'tinytorch.core.cnn.Conv2D.__init__': ( '06_spatial/spatial_dev.html#conv2d.__init__',
                                                                            'tinytorch/core/cnn.py'),
                                    'tinytorch.core.cnn.Conv2D.forward': ( '06_spatial/spatial_dev.html#conv2d.forward',
                                                                           'tinytorch/core/cnn.py'),
                                    'tinytorch.core.cnn._should_show_plots': ( '06_spatial/spatial_dev.html#_should_show_plots',
                                                                               'tinytorch/core/cnn.py'),
                                    'tinytorch.core.cnn.conv2d_naive': ( '06_spatial/spatial_dev.html#conv2d_naive',
                                                                         'tinytorch/core/cnn.py'),
                                    'tinytorch.core.cnn.flatten': ('06_spatial/spatial_dev.html#flatten', 'tinytorch/core/cnn.py')},
            'tinytorch.core.compression': { 'tinytorch.core.compression.CompressionMetrics': ( '12_compression/compression_dev.html#compressionmetrics',
                                                                                               'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.CompressionMetrics.__init__': ( '12_compression/compression_dev.html#compressionmetrics.__init__',
                                                                                                        'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.CompressionMetrics.calculate_model_size': ( '12_compression/compression_dev.html#compressionmetrics.calculate_model_size',
                                                                                                                    'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.CompressionMetrics.count_parameters': ( '12_compression/compression_dev.html#compressionmetrics.count_parameters',
                                                                                                                'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.CompressionSystemsProfiler': ( '12_compression/compression_dev.html#compressionsystemsprofiler',
                                                                                                       'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.CompressionSystemsProfiler.__init__': ( '12_compression/compression_dev.html#compressionsystemsprofiler.__init__',
                                                                                                                'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.CompressionSystemsProfiler._apply_magnitude_pruning': ( '12_compression/compression_dev.html#compressionsystemsprofiler._apply_magnitude_pruning',
                                                                                                                                'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.CompressionSystemsProfiler._apply_quantization': ( '12_compression/compression_dev.html#compressionsystemsprofiler._apply_quantization',
                                                                                                                           'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.CompressionSystemsProfiler._apply_structured_pruning': ( '12_compression/compression_dev.html#compressionsystemsprofiler._apply_structured_pruning',
                                                                                                                                 'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.CompressionSystemsProfiler._calculate_model_flops': ( '12_compression/compression_dev.html#compressionsystemsprofiler._calculate_model_flops',
                                                                                                                              'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.CompressionSystemsProfiler.analyze_accuracy_tradeoffs': ( '12_compression/compression_dev.html#compressionsystemsprofiler.analyze_accuracy_tradeoffs',
                                                                                                                                  'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.CompressionSystemsProfiler.analyze_quantization_impact': ( '12_compression/compression_dev.html#compressionsystemsprofiler.analyze_quantization_impact',
                                                                                                                                   'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.CompressionSystemsProfiler.measure_inference_speedup': ( '12_compression/compression_dev.html#compressionsystemsprofiler.measure_inference_speedup',
                                                                                                                                 'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.DistillationLoss': ( '12_compression/compression_dev.html#distillationloss',
                                                                                             'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.DistillationLoss.__call__': ( '12_compression/compression_dev.html#distillationloss.__call__',
                                                                                                      'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.DistillationLoss.__init__': ( '12_compression/compression_dev.html#distillationloss.__init__',
                                                                                                      'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.DistillationLoss._cross_entropy_loss': ( '12_compression/compression_dev.html#distillationloss._cross_entropy_loss',
                                                                                                                 'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.DistillationLoss._softmax': ( '12_compression/compression_dev.html#distillationloss._softmax',
                                                                                                      'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.calculate_sparsity': ( '12_compression/compression_dev.html#calculate_sparsity',
                                                                                               'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.compare_compression_techniques': ( '12_compression/compression_dev.html#compare_compression_techniques',
                                                                                                           'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.compute_neuron_importance': ( '12_compression/compression_dev.html#compute_neuron_importance',
                                                                                                      'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.prune_layer_neurons': ( '12_compression/compression_dev.html#prune_layer_neurons',
                                                                                                'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.prune_weights_by_magnitude': ( '12_compression/compression_dev.html#prune_weights_by_magnitude',
                                                                                                       'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.quantize_layer_weights': ( '12_compression/compression_dev.html#quantize_layer_weights',
                                                                                                   'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.setup_import_paths': ( '12_compression/compression_dev.html#setup_import_paths',
                                                                                               'tinytorch/core/compression.py')},
            'tinytorch.core.dataloader': { 'tinytorch.core.dataloader.CIFAR10Dataset': ( '08_dataloader/dataloader_dev.html#cifar10dataset',
                                                                                         'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.CIFAR10Dataset.__getitem__': ( '08_dataloader/dataloader_dev.html#cifar10dataset.__getitem__',
                                                                                                     'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.CIFAR10Dataset.__init__': ( '08_dataloader/dataloader_dev.html#cifar10dataset.__init__',
                                                                                                  'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.CIFAR10Dataset.__len__': ( '08_dataloader/dataloader_dev.html#cifar10dataset.__len__',
                                                                                                 'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.CIFAR10Dataset.get_num_classes': ( '08_dataloader/dataloader_dev.html#cifar10dataset.get_num_classes',
                                                                                                         'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.DataLoader': ( '08_dataloader/dataloader_dev.html#dataloader',
                                                                                     'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.DataLoader.__init__': ( '08_dataloader/dataloader_dev.html#dataloader.__init__',
                                                                                              'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.DataLoader.__iter__': ( '08_dataloader/dataloader_dev.html#dataloader.__iter__',
                                                                                              'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.DataLoader.__len__': ( '08_dataloader/dataloader_dev.html#dataloader.__len__',
                                                                                             'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.Dataset': ( '08_dataloader/dataloader_dev.html#dataset',
                                                                                  'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.Dataset.__getitem__': ( '08_dataloader/dataloader_dev.html#dataset.__getitem__',
                                                                                              'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.Dataset.__len__': ( '08_dataloader/dataloader_dev.html#dataset.__len__',
                                                                                          'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.Dataset.get_num_classes': ( '08_dataloader/dataloader_dev.html#dataset.get_num_classes',
                                                                                                  'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.Dataset.get_sample_shape': ( '08_dataloader/dataloader_dev.html#dataset.get_sample_shape',
                                                                                                   'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.SimpleDataset': ( '08_dataloader/dataloader_dev.html#simpledataset',
                                                                                        'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.SimpleDataset.__getitem__': ( '08_dataloader/dataloader_dev.html#simpledataset.__getitem__',
                                                                                                    'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.SimpleDataset.__init__': ( '08_dataloader/dataloader_dev.html#simpledataset.__init__',
                                                                                                 'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.SimpleDataset.__len__': ( '08_dataloader/dataloader_dev.html#simpledataset.__len__',
                                                                                                'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.SimpleDataset.get_num_classes': ( '08_dataloader/dataloader_dev.html#simpledataset.get_num_classes',
                                                                                                        'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.download_cifar10': ( '08_dataloader/dataloader_dev.html#download_cifar10',
                                                                                           'tinytorch/core/dataloader.py')},
            'tinytorch.core.dense': { 'tinytorch.core.dense.MLP': ('05_dense/dense_dev.html#mlp', 'tinytorch/core/dense.py'),
                                      'tinytorch.core.dense.MLP.__call__': ( '05_dense/dense_dev.html#mlp.__call__',
                                                                             'tinytorch/core/dense.py'),
                                      'tinytorch.core.dense.MLP.__init__': ( '05_dense/dense_dev.html#mlp.__init__',
                                                                             'tinytorch/core/dense.py'),
                                      'tinytorch.core.dense.MLP.forward': ( '05_dense/dense_dev.html#mlp.forward',
                                                                            'tinytorch/core/dense.py'),
                                      'tinytorch.core.dense.Sequential': ('05_dense/dense_dev.html#sequential', 'tinytorch/core/dense.py'),
                                      'tinytorch.core.dense.Sequential.__call__': ( '05_dense/dense_dev.html#sequential.__call__',
                                                                                    'tinytorch/core/dense.py'),
                                      'tinytorch.core.dense.Sequential.__init__': ( '05_dense/dense_dev.html#sequential.__init__',
                                                                                    'tinytorch/core/dense.py'),
                                      'tinytorch.core.dense.Sequential.add': ( '05_dense/dense_dev.html#sequential.add',
                                                                               'tinytorch/core/dense.py'),
                                      'tinytorch.core.dense.Sequential.forward': ( '05_dense/dense_dev.html#sequential.forward',
                                                                                   'tinytorch/core/dense.py'),
                                      'tinytorch.core.dense.create_mlp': ('05_dense/dense_dev.html#create_mlp', 'tinytorch/core/dense.py')},
            'tinytorch.core.introduction': { 'tinytorch.core.introduction.ModuleInfo': ( '00_introduction/introduction_dev.html#moduleinfo',
                                                                                         'tinytorch/core/introduction.py'),
                                             'tinytorch.core.introduction.ModuleInfo.difficulty_level': ( '00_introduction/introduction_dev.html#moduleinfo.difficulty_level',
                                                                                                          'tinytorch/core/introduction.py'),
                                             'tinytorch.core.introduction.ModuleInfo.estimated_hours': ( '00_introduction/introduction_dev.html#moduleinfo.estimated_hours',
                                                                                                         'tinytorch/core/introduction.py'),
                                             'tinytorch.core.introduction.TinyTorchAnalyzer': ( '00_introduction/introduction_dev.html#tinytorchanalyzer',
                                                                                                'tinytorch/core/introduction.py'),
                                             'tinytorch.core.introduction.TinyTorchAnalyzer.__init__': ( '00_introduction/introduction_dev.html#tinytorchanalyzer.__init__',
                                                                                                         'tinytorch/core/introduction.py'),
                                             'tinytorch.core.introduction.TinyTorchAnalyzer._build_dependency_graph': ( '00_introduction/introduction_dev.html#tinytorchanalyzer._build_dependency_graph',
                                                                                                                        'tinytorch/core/introduction.py'),
                                             'tinytorch.core.introduction.TinyTorchAnalyzer._load_all_modules': ( '00_introduction/introduction_dev.html#tinytorchanalyzer._load_all_modules',
                                                                                                                  'tinytorch/core/introduction.py'),
                                             'tinytorch.core.introduction.TinyTorchAnalyzer.get_learning_path': ( '00_introduction/introduction_dev.html#tinytorchanalyzer.get_learning_path',
                                                                                                                  'tinytorch/core/introduction.py'),
                                             'tinytorch.core.introduction.TinyTorchAnalyzer.get_module_levels': ( '00_introduction/introduction_dev.html#tinytorchanalyzer.get_module_levels',
                                                                                                                  'tinytorch/core/introduction.py'),
                                             'tinytorch.core.introduction.create_component_analysis': ( '00_introduction/introduction_dev.html#create_component_analysis',
                                                                                                        'tinytorch/core/introduction.py'),
                                             'tinytorch.core.introduction.create_dependency_graph_visualization': ( '00_introduction/introduction_dev.html#create_dependency_graph_visualization',
                                                                                                                    'tinytorch/core/introduction.py'),
                                             'tinytorch.core.introduction.create_learning_roadmap': ( '00_introduction/introduction_dev.html#create_learning_roadmap',
                                                                                                      'tinytorch/core/introduction.py'),
                                             'tinytorch.core.introduction.create_system_architecture_diagram': ( '00_introduction/introduction_dev.html#create_system_architecture_diagram',
                                                                                                                 'tinytorch/core/introduction.py'),
                                             'tinytorch.core.introduction.get_learning_recommendations': ( '00_introduction/introduction_dev.html#get_learning_recommendations',
                                                                                                           'tinytorch/core/introduction.py'),
                                             'tinytorch.core.introduction.get_module_info': ( '00_introduction/introduction_dev.html#get_module_info',
                                                                                              'tinytorch/core/introduction.py'),
                                             'tinytorch.core.introduction.get_tinytorch_overview': ( '00_introduction/introduction_dev.html#get_tinytorch_overview',
                                                                                                     'tinytorch/core/introduction.py'),
                                             'tinytorch.core.introduction.visualize_tinytorch_system': ( '00_introduction/introduction_dev.html#visualize_tinytorch_system',
                                                                                                         'tinytorch/core/introduction.py')},
            'tinytorch.core.kernels': { 'tinytorch.core.kernels.KernelOptimizationProfiler': ( '13_kernels/kernels_dev.html#kerneloptimizationprofiler',
                                                                                               'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.KernelOptimizationProfiler.__init__': ( '13_kernels/kernels_dev.html#kerneloptimizationprofiler.__init__',
                                                                                                        'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.KernelOptimizationProfiler._calculate_communication_overhead': ( '13_kernels/kernels_dev.html#kerneloptimizationprofiler._calculate_communication_overhead',
                                                                                                                                 'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.KernelOptimizationProfiler._calculate_memory_transactions': ( '13_kernels/kernels_dev.html#kerneloptimizationprofiler._calculate_memory_transactions',
                                                                                                                              'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.KernelOptimizationProfiler._detect_hardware': ( '13_kernels/kernels_dev.html#kerneloptimizationprofiler._detect_hardware',
                                                                                                                'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.KernelOptimizationProfiler._estimate_bank_conflicts': ( '13_kernels/kernels_dev.html#kerneloptimizationprofiler._estimate_bank_conflicts',
                                                                                                                        'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.KernelOptimizationProfiler._generate_divergence_optimizations': ( '13_kernels/kernels_dev.html#kerneloptimizationprofiler._generate_divergence_optimizations',
                                                                                                                                  'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.KernelOptimizationProfiler._get_multi_gpu_optimizations': ( '13_kernels/kernels_dev.html#kerneloptimizationprofiler._get_multi_gpu_optimizations',
                                                                                                                            'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.KernelOptimizationProfiler._get_tensor_core_requirements': ( '13_kernels/kernels_dev.html#kerneloptimizationprofiler._get_tensor_core_requirements',
                                                                                                                             'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.KernelOptimizationProfiler._identify_bottlenecks': ( '13_kernels/kernels_dev.html#kerneloptimizationprofiler._identify_bottlenecks',
                                                                                                                     'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.KernelOptimizationProfiler._identify_shared_memory_optimizations': ( '13_kernels/kernels_dev.html#kerneloptimizationprofiler._identify_shared_memory_optimizations',
                                                                                                                                     'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.KernelOptimizationProfiler._sequence_contains_pattern': ( '13_kernels/kernels_dev.html#kerneloptimizationprofiler._sequence_contains_pattern',
                                                                                                                          'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.KernelOptimizationProfiler.analyze_cuda_kernel_performance': ( '13_kernels/kernels_dev.html#kerneloptimizationprofiler.analyze_cuda_kernel_performance',
                                                                                                                               'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.KernelOptimizationProfiler.analyze_kernel_fusion_opportunities': ( '13_kernels/kernels_dev.html#kerneloptimizationprofiler.analyze_kernel_fusion_opportunities',
                                                                                                                                   'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.KernelOptimizationProfiler.analyze_memory_coalescing': ( '13_kernels/kernels_dev.html#kerneloptimizationprofiler.analyze_memory_coalescing',
                                                                                                                         'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.KernelOptimizationProfiler.analyze_multi_gpu_scaling': ( '13_kernels/kernels_dev.html#kerneloptimizationprofiler.analyze_multi_gpu_scaling',
                                                                                                                         'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.KernelOptimizationProfiler.analyze_shared_memory_usage': ( '13_kernels/kernels_dev.html#kerneloptimizationprofiler.analyze_shared_memory_usage',
                                                                                                                           'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.KernelOptimizationProfiler.analyze_tensor_core_utilization': ( '13_kernels/kernels_dev.html#kerneloptimizationprofiler.analyze_tensor_core_utilization',
                                                                                                                               'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.KernelOptimizationProfiler.analyze_warp_divergence': ( '13_kernels/kernels_dev.html#kerneloptimizationprofiler.analyze_warp_divergence',
                                                                                                                       'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.KernelOptimizationProfiler.generate_optimization_report': ( '13_kernels/kernels_dev.html#kerneloptimizationprofiler.generate_optimization_report',
                                                                                                                            'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.cache_friendly_matmul': ( '13_kernels/kernels_dev.html#cache_friendly_matmul',
                                                                                          'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.matmul_baseline': ( '13_kernels/kernels_dev.html#matmul_baseline',
                                                                                    'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.parallel_batch_processing': ( '13_kernels/kernels_dev.html#parallel_batch_processing',
                                                                                              'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.parallel_relu': ( '13_kernels/kernels_dev.html#parallel_relu',
                                                                                  'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.quantized_matmul': ( '13_kernels/kernels_dev.html#quantized_matmul',
                                                                                     'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.quantized_relu': ( '13_kernels/kernels_dev.html#quantized_relu',
                                                                                   'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.time_kernel': ( '13_kernels/kernels_dev.html#time_kernel',
                                                                                'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.vectorized_operations': ( '13_kernels/kernels_dev.html#vectorized_operations',
                                                                                          'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.vectorized_relu': ( '13_kernels/kernels_dev.html#vectorized_relu',
                                                                                    'tinytorch/core/kernels.py')},
            'tinytorch.core.layers': { 'tinytorch.core.layers.Dense': ('04_layers/layers_dev.html#dense', 'tinytorch/core/layers.py'),
                                       'tinytorch.core.layers.Dense.__call__': ( '04_layers/layers_dev.html#dense.__call__',
                                                                                 'tinytorch/core/layers.py'),
                                       'tinytorch.core.layers.Dense.__init__': ( '04_layers/layers_dev.html#dense.__init__',
                                                                                 'tinytorch/core/layers.py'),
                                       'tinytorch.core.layers.Dense.forward': ( '04_layers/layers_dev.html#dense.forward',
                                                                                'tinytorch/core/layers.py'),
                                       'tinytorch.core.layers.matmul': ('04_layers/layers_dev.html#matmul', 'tinytorch/core/layers.py')},
            'tinytorch.core.mlops': { 'tinytorch.core.mlops.DeploymentStrategy': ( '15_mlops/mlops_dev.html#deploymentstrategy',
                                                                                   'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.DriftDetector': ( '15_mlops/mlops_dev.html#driftdetector',
                                                                              'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.DriftDetector.__init__': ( '15_mlops/mlops_dev.html#driftdetector.__init__',
                                                                                       'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.DriftDetector.detect_drift': ( '15_mlops/mlops_dev.html#driftdetector.detect_drift',
                                                                                           'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.DriftDetector.get_drift_history': ( '15_mlops/mlops_dev.html#driftdetector.get_drift_history',
                                                                                                'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.MLOpsPipeline': ( '15_mlops/mlops_dev.html#mlopspipeline',
                                                                              'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.MLOpsPipeline.__init__': ( '15_mlops/mlops_dev.html#mlopspipeline.__init__',
                                                                                       'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.MLOpsPipeline.check_system_health': ( '15_mlops/mlops_dev.html#mlopspipeline.check_system_health',
                                                                                                  'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.MLOpsPipeline.get_pipeline_status': ( '15_mlops/mlops_dev.html#mlopspipeline.get_pipeline_status',
                                                                                                  'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.MLOpsPipeline.start_monitoring': ( '15_mlops/mlops_dev.html#mlopspipeline.start_monitoring',
                                                                                               'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.ModelMonitor': ( '15_mlops/mlops_dev.html#modelmonitor',
                                                                             'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.ModelMonitor.__init__': ( '15_mlops/mlops_dev.html#modelmonitor.__init__',
                                                                                      'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.ModelMonitor.check_alerts': ( '15_mlops/mlops_dev.html#modelmonitor.check_alerts',
                                                                                          'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.ModelMonitor.get_performance_trend': ( '15_mlops/mlops_dev.html#modelmonitor.get_performance_trend',
                                                                                                   'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.ModelMonitor.record_performance': ( '15_mlops/mlops_dev.html#modelmonitor.record_performance',
                                                                                                'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.ModelVersion': ( '15_mlops/mlops_dev.html#modelversion',
                                                                             'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.ProductionMLOpsProfiler': ( '15_mlops/mlops_dev.html#productionmlopsprofiler',
                                                                                        'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.ProductionMLOpsProfiler.__init__': ( '15_mlops/mlops_dev.html#productionmlopsprofiler.__init__',
                                                                                                 'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.ProductionMLOpsProfiler.create_continuous_training_pipeline': ( '15_mlops/mlops_dev.html#productionmlopsprofiler.create_continuous_training_pipeline',
                                                                                                                            'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.ProductionMLOpsProfiler.detect_advanced_feature_drift': ( '15_mlops/mlops_dev.html#productionmlopsprofiler.detect_advanced_feature_drift',
                                                                                                                      'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.ProductionMLOpsProfiler.generate_mlops_governance_report': ( '15_mlops/mlops_dev.html#productionmlopsprofiler.generate_mlops_governance_report',
                                                                                                                         'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.ProductionMLOpsProfiler.handle_production_incident': ( '15_mlops/mlops_dev.html#productionmlopsprofiler.handle_production_incident',
                                                                                                                   'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.ProductionMLOpsProfiler.orchestrate_deployment': ( '15_mlops/mlops_dev.html#productionmlopsprofiler.orchestrate_deployment',
                                                                                                               'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.ProductionMLOpsProfiler.register_model_version': ( '15_mlops/mlops_dev.html#productionmlopsprofiler.register_model_version',
                                                                                                               'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.RetrainingTrigger': ( '15_mlops/mlops_dev.html#retrainingtrigger',
                                                                                  'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.RetrainingTrigger.__init__': ( '15_mlops/mlops_dev.html#retrainingtrigger.__init__',
                                                                                           'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.RetrainingTrigger.check_trigger_conditions': ( '15_mlops/mlops_dev.html#retrainingtrigger.check_trigger_conditions',
                                                                                                           'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.RetrainingTrigger.execute_retraining': ( '15_mlops/mlops_dev.html#retrainingtrigger.execute_retraining',
                                                                                                     'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.RetrainingTrigger.get_retraining_history': ( '15_mlops/mlops_dev.html#retrainingtrigger.get_retraining_history',
                                                                                                         'tinytorch/core/mlops.py')},
            'tinytorch.core.networks': { 'tinytorch.core.networks.MLP': ('05_dense/dense_dev.html#mlp', 'tinytorch/core/networks.py'),
                                         'tinytorch.core.networks.MLP.__call__': ( '05_dense/dense_dev.html#mlp.__call__',
                                                                                   'tinytorch/core/networks.py'),
                                         'tinytorch.core.networks.MLP.__init__': ( '05_dense/dense_dev.html#mlp.__init__',
                                                                                   'tinytorch/core/networks.py'),
                                         'tinytorch.core.networks.MLP.forward': ( '05_dense/dense_dev.html#mlp.forward',
                                                                                  'tinytorch/core/networks.py'),
                                         'tinytorch.core.networks.Sequential': ( '05_dense/dense_dev.html#sequential',
                                                                                 'tinytorch/core/networks.py'),
                                         'tinytorch.core.networks.Sequential.__call__': ( '05_dense/dense_dev.html#sequential.__call__',
                                                                                          'tinytorch/core/networks.py'),
                                         'tinytorch.core.networks.Sequential.__init__': ( '05_dense/dense_dev.html#sequential.__init__',
                                                                                          'tinytorch/core/networks.py'),
                                         'tinytorch.core.networks.Sequential.add': ( '05_dense/dense_dev.html#sequential.add',
                                                                                     'tinytorch/core/networks.py'),
                                         'tinytorch.core.networks.Sequential.forward': ( '05_dense/dense_dev.html#sequential.forward',
                                                                                         'tinytorch/core/networks.py'),
                                         'tinytorch.core.networks._should_show_plots': ( '05_dense/dense_dev.html#_should_show_plots',
                                                                                         'tinytorch/core/networks.py'),
                                         'tinytorch.core.networks.create_mlp': ( '05_dense/dense_dev.html#create_mlp',
                                                                                 'tinytorch/core/networks.py')},
            'tinytorch.core.optimizers': { 'tinytorch.core.optimizers.Adam': ( '10_optimizers/optimizers_dev.html#adam',
                                                                               'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.Adam.__init__': ( '10_optimizers/optimizers_dev.html#adam.__init__',
                                                                                        'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.Adam.step': ( '10_optimizers/optimizers_dev.html#adam.step',
                                                                                    'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.Adam.zero_grad': ( '10_optimizers/optimizers_dev.html#adam.zero_grad',
                                                                                         'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.AdvancedOptimizerFeatures': ( '10_optimizers/optimizers_dev.html#advancedoptimizerfeatures',
                                                                                                    'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.AdvancedOptimizerFeatures.__init__': ( '10_optimizers/optimizers_dev.html#advancedoptimizerfeatures.__init__',
                                                                                                             'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.AdvancedOptimizerFeatures.accumulate_gradients': ( '10_optimizers/optimizers_dev.html#advancedoptimizerfeatures.accumulate_gradients',
                                                                                                                         'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.AdvancedOptimizerFeatures.apply_gradient_clipping': ( '10_optimizers/optimizers_dev.html#advancedoptimizerfeatures.apply_gradient_clipping',
                                                                                                                            'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.AdvancedOptimizerFeatures.apply_warmup_schedule': ( '10_optimizers/optimizers_dev.html#advancedoptimizerfeatures.apply_warmup_schedule',
                                                                                                                          'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.AdvancedOptimizerFeatures.simulate_distributed_sync': ( '10_optimizers/optimizers_dev.html#advancedoptimizerfeatures.simulate_distributed_sync',
                                                                                                                              'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.AdvancedOptimizerFeatures.simulate_mixed_precision': ( '10_optimizers/optimizers_dev.html#advancedoptimizerfeatures.simulate_mixed_precision',
                                                                                                                             'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.OptimizerConvergenceProfiler': ( '10_optimizers/optimizers_dev.html#optimizerconvergenceprofiler',
                                                                                                       'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.OptimizerConvergenceProfiler.__init__': ( '10_optimizers/optimizers_dev.html#optimizerconvergenceprofiler.__init__',
                                                                                                                'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.OptimizerConvergenceProfiler._analyze_convergence_profile': ( '10_optimizers/optimizers_dev.html#optimizerconvergenceprofiler._analyze_convergence_profile',
                                                                                                                                    'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.OptimizerConvergenceProfiler.analyze_learning_rate_sensitivity': ( '10_optimizers/optimizers_dev.html#optimizerconvergenceprofiler.analyze_learning_rate_sensitivity',
                                                                                                                                         'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.OptimizerConvergenceProfiler.compare_optimizers': ( '10_optimizers/optimizers_dev.html#optimizerconvergenceprofiler.compare_optimizers',
                                                                                                                          'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.OptimizerConvergenceProfiler.estimate_memory_usage': ( '10_optimizers/optimizers_dev.html#optimizerconvergenceprofiler.estimate_memory_usage',
                                                                                                                             'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.OptimizerConvergenceProfiler.generate_production_recommendations': ( '10_optimizers/optimizers_dev.html#optimizerconvergenceprofiler.generate_production_recommendations',
                                                                                                                                           'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.OptimizerConvergenceProfiler.profile_optimizer_convergence': ( '10_optimizers/optimizers_dev.html#optimizerconvergenceprofiler.profile_optimizer_convergence',
                                                                                                                                     'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.SGD': ( '10_optimizers/optimizers_dev.html#sgd',
                                                                              'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.SGD.__init__': ( '10_optimizers/optimizers_dev.html#sgd.__init__',
                                                                                       'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.SGD.step': ( '10_optimizers/optimizers_dev.html#sgd.step',
                                                                                   'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.SGD.zero_grad': ( '10_optimizers/optimizers_dev.html#sgd.zero_grad',
                                                                                        'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.StepLR': ( '10_optimizers/optimizers_dev.html#steplr',
                                                                                 'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.StepLR.__init__': ( '10_optimizers/optimizers_dev.html#steplr.__init__',
                                                                                          'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.StepLR.get_lr': ( '10_optimizers/optimizers_dev.html#steplr.get_lr',
                                                                                        'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.StepLR.step': ( '10_optimizers/optimizers_dev.html#steplr.step',
                                                                                      'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.gradient_descent_step': ( '10_optimizers/optimizers_dev.html#gradient_descent_step',
                                                                                                'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.setup_import_paths': ( '10_optimizers/optimizers_dev.html#setup_import_paths',
                                                                                             'tinytorch/core/optimizers.py')},
            'tinytorch.core.setup': { 'tinytorch.core.setup.personal_info': ( '01_setup/setup_dev.html#personal_info',
                                                                              'tinytorch/core/setup.py'),
                                      'tinytorch.core.setup.system_info': ( '01_setup/setup_dev.html#system_info',
                                                                            'tinytorch/core/setup.py')},
            'tinytorch.core.spatial': { 'tinytorch.core.spatial.Conv2D': ( '06_spatial/spatial_dev.html#conv2d',
                                                                           'tinytorch/core/spatial.py'),
                                        'tinytorch.core.spatial.Conv2D.__call__': ( '06_spatial/spatial_dev.html#conv2d.__call__',
                                                                                    'tinytorch/core/spatial.py'),
                                        'tinytorch.core.spatial.Conv2D.__init__': ( '06_spatial/spatial_dev.html#conv2d.__init__',
                                                                                    'tinytorch/core/spatial.py'),
                                        'tinytorch.core.spatial.Conv2D.forward': ( '06_spatial/spatial_dev.html#conv2d.forward',
                                                                                   'tinytorch/core/spatial.py'),
                                        'tinytorch.core.spatial.ConvolutionProfiler': ( '06_spatial/spatial_dev.html#convolutionprofiler',
                                                                                        'tinytorch/core/spatial.py'),
                                        'tinytorch.core.spatial.ConvolutionProfiler.__init__': ( '06_spatial/spatial_dev.html#convolutionprofiler.__init__',
                                                                                                 'tinytorch/core/spatial.py'),
                                        'tinytorch.core.spatial.ConvolutionProfiler._analyze_convolution_performance': ( '06_spatial/spatial_dev.html#convolutionprofiler._analyze_convolution_performance',
                                                                                                                         'tinytorch/core/spatial.py'),
                                        'tinytorch.core.spatial.ConvolutionProfiler._generate_optimization_recommendations': ( '06_spatial/spatial_dev.html#convolutionprofiler._generate_optimization_recommendations',
                                                                                                                               'tinytorch/core/spatial.py'),
                                        'tinytorch.core.spatial.ConvolutionProfiler.analyze_memory_patterns': ( '06_spatial/spatial_dev.html#convolutionprofiler.analyze_memory_patterns',
                                                                                                                'tinytorch/core/spatial.py'),
                                        'tinytorch.core.spatial.ConvolutionProfiler.profile_convolution_operation': ( '06_spatial/spatial_dev.html#convolutionprofiler.profile_convolution_operation',
                                                                                                                      'tinytorch/core/spatial.py'),
                                        'tinytorch.core.spatial.conv2d_naive': ( '06_spatial/spatial_dev.html#conv2d_naive',
                                                                                 'tinytorch/core/spatial.py'),
                                        'tinytorch.core.spatial.flatten': ( '06_spatial/spatial_dev.html#flatten',
                                                                            'tinytorch/core/spatial.py')},
            'tinytorch.core.tensor': { 'tinytorch.core.tensor.Tensor': ('02_tensor/tensor_dev.html#tensor', 'tinytorch/core/tensor.py'),
                                       'tinytorch.core.tensor.Tensor.__add__': ( '02_tensor/tensor_dev.html#tensor.__add__',
                                                                                 'tinytorch/core/tensor.py'),
                                       'tinytorch.core.tensor.Tensor.__init__': ( '02_tensor/tensor_dev.html#tensor.__init__',
                                                                                  'tinytorch/core/tensor.py'),
                                       'tinytorch.core.tensor.Tensor.__mul__': ( '02_tensor/tensor_dev.html#tensor.__mul__',
                                                                                 'tinytorch/core/tensor.py'),
                                       'tinytorch.core.tensor.Tensor.__repr__': ( '02_tensor/tensor_dev.html#tensor.__repr__',
                                                                                  'tinytorch/core/tensor.py'),
                                       'tinytorch.core.tensor.Tensor.__sub__': ( '02_tensor/tensor_dev.html#tensor.__sub__',
                                                                                 'tinytorch/core/tensor.py'),
                                       'tinytorch.core.tensor.Tensor.__truediv__': ( '02_tensor/tensor_dev.html#tensor.__truediv__',
                                                                                     'tinytorch/core/tensor.py'),
                                       'tinytorch.core.tensor.Tensor.add': ( '02_tensor/tensor_dev.html#tensor.add',
                                                                             'tinytorch/core/tensor.py'),
                                       'tinytorch.core.tensor.Tensor.data': ( '02_tensor/tensor_dev.html#tensor.data',
                                                                              'tinytorch/core/tensor.py'),
                                       'tinytorch.core.tensor.Tensor.dtype': ( '02_tensor/tensor_dev.html#tensor.dtype',
                                                                               'tinytorch/core/tensor.py'),
                                       'tinytorch.core.tensor.Tensor.matmul': ( '02_tensor/tensor_dev.html#tensor.matmul',
                                                                                'tinytorch/core/tensor.py'),
                                       'tinytorch.core.tensor.Tensor.mean': ( '02_tensor/tensor_dev.html#tensor.mean',
                                                                              'tinytorch/core/tensor.py'),
                                       'tinytorch.core.tensor.Tensor.multiply': ( '02_tensor/tensor_dev.html#tensor.multiply',
                                                                                  'tinytorch/core/tensor.py'),
                                       'tinytorch.core.tensor.Tensor.shape': ( '02_tensor/tensor_dev.html#tensor.shape',
                                                                               'tinytorch/core/tensor.py'),
                                       'tinytorch.core.tensor.Tensor.size': ( '02_tensor/tensor_dev.html#tensor.size',
                                                                              'tinytorch/core/tensor.py')},
            'tinytorch.core.training': { 'tinytorch.core.training.Accuracy': ( '11_training/training_dev.html#accuracy',
                                                                               'tinytorch/core/training.py'),
                                         'tinytorch.core.training.Accuracy.__call__': ( '11_training/training_dev.html#accuracy.__call__',
                                                                                        'tinytorch/core/training.py'),
                                         'tinytorch.core.training.Accuracy.__init__': ( '11_training/training_dev.html#accuracy.__init__',
                                                                                        'tinytorch/core/training.py'),
                                         'tinytorch.core.training.Accuracy.forward': ( '11_training/training_dev.html#accuracy.forward',
                                                                                       'tinytorch/core/training.py'),
                                         'tinytorch.core.training.BinaryCrossEntropyLoss': ( '11_training/training_dev.html#binarycrossentropyloss',
                                                                                             'tinytorch/core/training.py'),
                                         'tinytorch.core.training.BinaryCrossEntropyLoss.__call__': ( '11_training/training_dev.html#binarycrossentropyloss.__call__',
                                                                                                      'tinytorch/core/training.py'),
                                         'tinytorch.core.training.BinaryCrossEntropyLoss.__init__': ( '11_training/training_dev.html#binarycrossentropyloss.__init__',
                                                                                                      'tinytorch/core/training.py'),
                                         'tinytorch.core.training.BinaryCrossEntropyLoss.forward': ( '11_training/training_dev.html#binarycrossentropyloss.forward',
                                                                                                     'tinytorch/core/training.py'),
                                         'tinytorch.core.training.CrossEntropyLoss': ( '11_training/training_dev.html#crossentropyloss',
                                                                                       'tinytorch/core/training.py'),
                                         'tinytorch.core.training.CrossEntropyLoss.__call__': ( '11_training/training_dev.html#crossentropyloss.__call__',
                                                                                                'tinytorch/core/training.py'),
                                         'tinytorch.core.training.CrossEntropyLoss.__init__': ( '11_training/training_dev.html#crossentropyloss.__init__',
                                                                                                'tinytorch/core/training.py'),
                                         'tinytorch.core.training.CrossEntropyLoss.forward': ( '11_training/training_dev.html#crossentropyloss.forward',
                                                                                               'tinytorch/core/training.py'),
                                         'tinytorch.core.training.MeanSquaredError': ( '11_training/training_dev.html#meansquarederror',
                                                                                       'tinytorch/core/training.py'),
                                         'tinytorch.core.training.MeanSquaredError.__call__': ( '11_training/training_dev.html#meansquarederror.__call__',
                                                                                                'tinytorch/core/training.py'),
                                         'tinytorch.core.training.MeanSquaredError.__init__': ( '11_training/training_dev.html#meansquarederror.__init__',
                                                                                                'tinytorch/core/training.py'),
                                         'tinytorch.core.training.MeanSquaredError.forward': ( '11_training/training_dev.html#meansquarederror.forward',
                                                                                               'tinytorch/core/training.py'),
                                         'tinytorch.core.training.ProductionTrainingOptimizer': ( '11_training/training_dev.html#productiontrainingoptimizer',
                                                                                                  'tinytorch/core/training.py'),
                                         'tinytorch.core.training.ProductionTrainingOptimizer.__init__': ( '11_training/training_dev.html#productiontrainingoptimizer.__init__',
                                                                                                           'tinytorch/core/training.py'),
                                         'tinytorch.core.training.ProductionTrainingOptimizer._generate_batch_size_analysis': ( '11_training/training_dev.html#productiontrainingoptimizer._generate_batch_size_analysis',
                                                                                                                                'tinytorch/core/training.py'),
                                         'tinytorch.core.training.ProductionTrainingOptimizer.optimize_batch_size_for_throughput': ( '11_training/training_dev.html#productiontrainingoptimizer.optimize_batch_size_for_throughput',
                                                                                                                                     'tinytorch/core/training.py'),
                                         'tinytorch.core.training.Trainer': ( '11_training/training_dev.html#trainer',
                                                                              'tinytorch/core/training.py'),
                                         'tinytorch.core.training.Trainer.__init__': ( '11_training/training_dev.html#trainer.__init__',
                                                                                       'tinytorch/core/training.py'),
                                         'tinytorch.core.training.Trainer._get_model_state': ( '11_training/training_dev.html#trainer._get_model_state',
                                                                                               'tinytorch/core/training.py'),
                                         'tinytorch.core.training.Trainer._set_model_state': ( '11_training/training_dev.html#trainer._set_model_state',
                                                                                               'tinytorch/core/training.py'),
                                         'tinytorch.core.training.Trainer.fit': ( '11_training/training_dev.html#trainer.fit',
                                                                                  'tinytorch/core/training.py'),
                                         'tinytorch.core.training.Trainer.load_checkpoint': ( '11_training/training_dev.html#trainer.load_checkpoint',
                                                                                              'tinytorch/core/training.py'),
                                         'tinytorch.core.training.Trainer.save_checkpoint': ( '11_training/training_dev.html#trainer.save_checkpoint',
                                                                                              'tinytorch/core/training.py'),
                                         'tinytorch.core.training.Trainer.train_epoch': ( '11_training/training_dev.html#trainer.train_epoch',
                                                                                          'tinytorch/core/training.py'),
                                         'tinytorch.core.training.Trainer.validate_epoch': ( '11_training/training_dev.html#trainer.validate_epoch',
                                                                                             'tinytorch/core/training.py'),
                                         'tinytorch.core.training.TrainingPipelineProfiler': ( '11_training/training_dev.html#trainingpipelineprofiler',
                                                                                               'tinytorch/core/training.py'),
                                         'tinytorch.core.training.TrainingPipelineProfiler.__init__': ( '11_training/training_dev.html#trainingpipelineprofiler.__init__',
                                                                                                        'tinytorch/core/training.py'),
                                         'tinytorch.core.training.TrainingPipelineProfiler._analyze_pipeline_performance': ( '11_training/training_dev.html#trainingpipelineprofiler._analyze_pipeline_performance',
                                                                                                                             'tinytorch/core/training.py'),
                                         'tinytorch.core.training.TrainingPipelineProfiler._estimate_memory_usage': ( '11_training/training_dev.html#trainingpipelineprofiler._estimate_memory_usage',
                                                                                                                      'tinytorch/core/training.py'),
                                         'tinytorch.core.training.TrainingPipelineProfiler.profile_complete_training_step': ( '11_training/training_dev.html#trainingpipelineprofiler.profile_complete_training_step',
                                                                                                                              'tinytorch/core/training.py')},
            'tinytorch.tinygpt': { 'tinytorch.tinygpt.CharTokenizer': ('16_tinygpt/tinygpt_dev.html#chartokenizer', 'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.CharTokenizer.__init__': ( '16_tinygpt/tinygpt_dev.html#chartokenizer.__init__',
                                                                                 'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.CharTokenizer.decode': ( '16_tinygpt/tinygpt_dev.html#chartokenizer.decode',
                                                                               'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.CharTokenizer.encode': ( '16_tinygpt/tinygpt_dev.html#chartokenizer.encode',
                                                                               'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.CharTokenizer.encode_batch': ( '16_tinygpt/tinygpt_dev.html#chartokenizer.encode_batch',
                                                                                     'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.CharTokenizer.fit': ( '16_tinygpt/tinygpt_dev.html#chartokenizer.fit',
                                                                            'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.CharTokenizer.get_vocab_size': ( '16_tinygpt/tinygpt_dev.html#chartokenizer.get_vocab_size',
                                                                                       'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.CrossEntropyLoss': ( '16_tinygpt/tinygpt_dev.html#crossentropyloss',
                                                                           'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.CrossEntropyLoss.forward': ( '16_tinygpt/tinygpt_dev.html#crossentropyloss.forward',
                                                                                   'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.LanguageModelAccuracy': ( '16_tinygpt/tinygpt_dev.html#languagemodelaccuracy',
                                                                                'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.LanguageModelAccuracy.forward': ( '16_tinygpt/tinygpt_dev.html#languagemodelaccuracy.forward',
                                                                                        'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.LanguageModelLoss': ( '16_tinygpt/tinygpt_dev.html#languagemodelloss',
                                                                            'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.LanguageModelLoss.__init__': ( '16_tinygpt/tinygpt_dev.html#languagemodelloss.__init__',
                                                                                     'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.LanguageModelLoss.forward': ( '16_tinygpt/tinygpt_dev.html#languagemodelloss.forward',
                                                                                    'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.LanguageModelTrainer': ( '16_tinygpt/tinygpt_dev.html#languagemodeltrainer',
                                                                               'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.LanguageModelTrainer.__init__': ( '16_tinygpt/tinygpt_dev.html#languagemodeltrainer.__init__',
                                                                                        'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.LanguageModelTrainer.create_training_data': ( '16_tinygpt/tinygpt_dev.html#languagemodeltrainer.create_training_data',
                                                                                                    'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.LanguageModelTrainer.fit': ( '16_tinygpt/tinygpt_dev.html#languagemodeltrainer.fit',
                                                                                   'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.LanguageModelTrainer.generate_text': ( '16_tinygpt/tinygpt_dev.html#languagemodeltrainer.generate_text',
                                                                                             'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.LayerNorm': ('16_tinygpt/tinygpt_dev.html#layernorm', 'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.LayerNorm.__init__': ( '16_tinygpt/tinygpt_dev.html#layernorm.__init__',
                                                                             'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.LayerNorm.forward': ( '16_tinygpt/tinygpt_dev.html#layernorm.forward',
                                                                            'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.MultiHeadAttention': ( '16_tinygpt/tinygpt_dev.html#multiheadattention',
                                                                             'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.MultiHeadAttention.__init__': ( '16_tinygpt/tinygpt_dev.html#multiheadattention.__init__',
                                                                                      'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.MultiHeadAttention._combine_heads': ( '16_tinygpt/tinygpt_dev.html#multiheadattention._combine_heads',
                                                                                            'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.MultiHeadAttention._reshape_for_attention': ( '16_tinygpt/tinygpt_dev.html#multiheadattention._reshape_for_attention',
                                                                                                    'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.MultiHeadAttention._scaled_dot_product_attention': ( '16_tinygpt/tinygpt_dev.html#multiheadattention._scaled_dot_product_attention',
                                                                                                           'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.MultiHeadAttention.forward': ( '16_tinygpt/tinygpt_dev.html#multiheadattention.forward',
                                                                                     'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.PositionalEncoding': ( '16_tinygpt/tinygpt_dev.html#positionalencoding',
                                                                             'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.PositionalEncoding.__init__': ( '16_tinygpt/tinygpt_dev.html#positionalencoding.__init__',
                                                                                      'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.PositionalEncoding.forward': ( '16_tinygpt/tinygpt_dev.html#positionalencoding.forward',
                                                                                     'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.TinyGPT': ('16_tinygpt/tinygpt_dev.html#tinygpt', 'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.TinyGPT.__init__': ( '16_tinygpt/tinygpt_dev.html#tinygpt.__init__',
                                                                           'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.TinyGPT.count_parameters': ( '16_tinygpt/tinygpt_dev.html#tinygpt.count_parameters',
                                                                                   'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.TinyGPT.forward': ( '16_tinygpt/tinygpt_dev.html#tinygpt.forward',
                                                                          'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.TinyGPT.generate': ( '16_tinygpt/tinygpt_dev.html#tinygpt.generate',
                                                                           'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.Trainer': ('16_tinygpt/tinygpt_dev.html#trainer', 'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.Trainer.__init__': ( '16_tinygpt/tinygpt_dev.html#trainer.__init__',
                                                                           'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.TransformerBlock': ( '16_tinygpt/tinygpt_dev.html#transformerblock',
                                                                           'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.TransformerBlock.__init__': ( '16_tinygpt/tinygpt_dev.html#transformerblock.__init__',
                                                                                    'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.TransformerBlock.forward': ( '16_tinygpt/tinygpt_dev.html#transformerblock.forward',
                                                                                   'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.create_causal_mask': ( '16_tinygpt/tinygpt_dev.html#create_causal_mask',
                                                                             'tinytorch/tinygpt.py'),
                                   'tinytorch.tinygpt.no_grad': ('16_tinygpt/tinygpt_dev.html#no_grad', 'tinytorch/tinygpt.py')}}}
