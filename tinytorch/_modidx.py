# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/TinyTorch/',
                'doc_host': 'https://tinytorch.github.io',
                'git_url': 'https://github.com/tinytorch/TinyTorch/',
                'lib_path': 'tinytorch'},
  'syms': { 'tinytorch.core.activations': { 'tinytorch.core.activations.ReLU': ( '02_activations/activations_dev.html#relu',
                                                                                 'tinytorch/core/activations.py'),
                                            'tinytorch.core.activations.ReLU.__call__': ( '02_activations/activations_dev.html#relu.__call__',
                                                                                          'tinytorch/core/activations.py'),
                                            'tinytorch.core.activations.ReLU.forward': ( '02_activations/activations_dev.html#relu.forward',
                                                                                         'tinytorch/core/activations.py'),
                                            'tinytorch.core.activations.Sigmoid': ( '02_activations/activations_dev.html#sigmoid',
                                                                                    'tinytorch/core/activations.py'),
                                            'tinytorch.core.activations.Sigmoid.__call__': ( '02_activations/activations_dev.html#sigmoid.__call__',
                                                                                             'tinytorch/core/activations.py'),
                                            'tinytorch.core.activations.Sigmoid.forward': ( '02_activations/activations_dev.html#sigmoid.forward',
                                                                                            'tinytorch/core/activations.py'),
                                            'tinytorch.core.activations.Softmax': ( '02_activations/activations_dev.html#softmax',
                                                                                    'tinytorch/core/activations.py'),
                                            'tinytorch.core.activations.Softmax.__call__': ( '02_activations/activations_dev.html#softmax.__call__',
                                                                                             'tinytorch/core/activations.py'),
                                            'tinytorch.core.activations.Softmax.forward': ( '02_activations/activations_dev.html#softmax.forward',
                                                                                            'tinytorch/core/activations.py'),
                                            'tinytorch.core.activations.Tanh': ( '02_activations/activations_dev.html#tanh',
                                                                                 'tinytorch/core/activations.py'),
                                            'tinytorch.core.activations.Tanh.__call__': ( '02_activations/activations_dev.html#tanh.__call__',
                                                                                          'tinytorch/core/activations.py'),
                                            'tinytorch.core.activations.Tanh.forward': ( '02_activations/activations_dev.html#tanh.forward',
                                                                                         'tinytorch/core/activations.py'),
                                            'tinytorch.core.activations._should_show_plots': ( '02_activations/activations_dev.html#_should_show_plots',
                                                                                               'tinytorch/core/activations.py'),
                                            'tinytorch.core.activations.visualize_activation_function': ( '02_activations/activations_dev.html#visualize_activation_function',
                                                                                                          'tinytorch/core/activations.py'),
                                            'tinytorch.core.activations.visualize_activation_on_data': ( '02_activations/activations_dev.html#visualize_activation_on_data',
                                                                                                         'tinytorch/core/activations.py')},
            'tinytorch.core.autograd': {},
            'tinytorch.core.benchmarking': { 'tinytorch.core.benchmarking.BenchmarkResult': ( '12_benchmarking/benchmarking_dev.html#benchmarkresult',
                                                                                              'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.BenchmarkScenario': ( '12_benchmarking/benchmarking_dev.html#benchmarkscenario',
                                                                                                'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.BenchmarkScenarios': ( '12_benchmarking/benchmarking_dev.html#benchmarkscenarios',
                                                                                                 'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.BenchmarkScenarios.__init__': ( '12_benchmarking/benchmarking_dev.html#benchmarkscenarios.__init__',
                                                                                                          'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.BenchmarkScenarios.offline': ( '12_benchmarking/benchmarking_dev.html#benchmarkscenarios.offline',
                                                                                                         'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.BenchmarkScenarios.server': ( '12_benchmarking/benchmarking_dev.html#benchmarkscenarios.server',
                                                                                                        'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.BenchmarkScenarios.single_stream': ( '12_benchmarking/benchmarking_dev.html#benchmarkscenarios.single_stream',
                                                                                                               'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.PerformanceReporter': ( '12_benchmarking/benchmarking_dev.html#performancereporter',
                                                                                                  'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.PerformanceReporter.__init__': ( '12_benchmarking/benchmarking_dev.html#performancereporter.__init__',
                                                                                                           'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.PerformanceReporter.generate_project_report': ( '12_benchmarking/benchmarking_dev.html#performancereporter.generate_project_report',
                                                                                                                          'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.PerformanceReporter.save_report': ( '12_benchmarking/benchmarking_dev.html#performancereporter.save_report',
                                                                                                              'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.StatisticalValidation': ( '12_benchmarking/benchmarking_dev.html#statisticalvalidation',
                                                                                                    'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.StatisticalValidator': ( '12_benchmarking/benchmarking_dev.html#statisticalvalidator',
                                                                                                   'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.StatisticalValidator.__init__': ( '12_benchmarking/benchmarking_dev.html#statisticalvalidator.__init__',
                                                                                                            'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.StatisticalValidator.validate_benchmark_result': ( '12_benchmarking/benchmarking_dev.html#statisticalvalidator.validate_benchmark_result',
                                                                                                                             'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.StatisticalValidator.validate_comparison': ( '12_benchmarking/benchmarking_dev.html#statisticalvalidator.validate_comparison',
                                                                                                                       'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.TinyTorchPerf': ( '12_benchmarking/benchmarking_dev.html#tinytorchperf',
                                                                                            'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.TinyTorchPerf.__init__': ( '12_benchmarking/benchmarking_dev.html#tinytorchperf.__init__',
                                                                                                     'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.TinyTorchPerf.compare_models': ( '12_benchmarking/benchmarking_dev.html#tinytorchperf.compare_models',
                                                                                                           'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.TinyTorchPerf.generate_report': ( '12_benchmarking/benchmarking_dev.html#tinytorchperf.generate_report',
                                                                                                            'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.TinyTorchPerf.run_all_scenarios': ( '12_benchmarking/benchmarking_dev.html#tinytorchperf.run_all_scenarios',
                                                                                                              'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.TinyTorchPerf.run_offline': ( '12_benchmarking/benchmarking_dev.html#tinytorchperf.run_offline',
                                                                                                        'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.TinyTorchPerf.run_server': ( '12_benchmarking/benchmarking_dev.html#tinytorchperf.run_server',
                                                                                                       'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.TinyTorchPerf.run_single_stream': ( '12_benchmarking/benchmarking_dev.html#tinytorchperf.run_single_stream',
                                                                                                              'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.TinyTorchPerf.set_dataset': ( '12_benchmarking/benchmarking_dev.html#tinytorchperf.set_dataset',
                                                                                                        'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking.TinyTorchPerf.set_model': ( '12_benchmarking/benchmarking_dev.html#tinytorchperf.set_model',
                                                                                                      'tinytorch/core/benchmarking.py'),
                                             'tinytorch.core.benchmarking._should_show_plots': ( '12_benchmarking/benchmarking_dev.html#_should_show_plots',
                                                                                                 'tinytorch/core/benchmarking.py')},
            'tinytorch.core.cnn': { 'tinytorch.core.cnn.Conv2D': ('05_cnn/cnn_dev.html#conv2d', 'tinytorch/core/cnn.py'),
                                    'tinytorch.core.cnn.Conv2D.__call__': ('05_cnn/cnn_dev.html#conv2d.__call__', 'tinytorch/core/cnn.py'),
                                    'tinytorch.core.cnn.Conv2D.__init__': ('05_cnn/cnn_dev.html#conv2d.__init__', 'tinytorch/core/cnn.py'),
                                    'tinytorch.core.cnn.Conv2D.forward': ('05_cnn/cnn_dev.html#conv2d.forward', 'tinytorch/core/cnn.py'),
                                    'tinytorch.core.cnn._should_show_plots': ( '05_cnn/cnn_dev.html#_should_show_plots',
                                                                               'tinytorch/core/cnn.py'),
                                    'tinytorch.core.cnn.conv2d_naive': ('05_cnn/cnn_dev.html#conv2d_naive', 'tinytorch/core/cnn.py'),
                                    'tinytorch.core.cnn.flatten': ('05_cnn/cnn_dev.html#flatten', 'tinytorch/core/cnn.py')},
            'tinytorch.core.compression': { 'tinytorch.core.compression.CompressionMetrics': ( '10_compression/compression_dev.html#compressionmetrics',
                                                                                               'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.CompressionMetrics.__init__': ( '10_compression/compression_dev.html#compressionmetrics.__init__',
                                                                                                        'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.CompressionMetrics.calculate_model_size': ( '10_compression/compression_dev.html#compressionmetrics.calculate_model_size',
                                                                                                                    'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.CompressionMetrics.count_parameters': ( '10_compression/compression_dev.html#compressionmetrics.count_parameters',
                                                                                                                'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.DistillationLoss': ( '10_compression/compression_dev.html#distillationloss',
                                                                                             'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.DistillationLoss.__call__': ( '10_compression/compression_dev.html#distillationloss.__call__',
                                                                                                      'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.DistillationLoss.__init__': ( '10_compression/compression_dev.html#distillationloss.__init__',
                                                                                                      'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.DistillationLoss._cross_entropy_loss': ( '10_compression/compression_dev.html#distillationloss._cross_entropy_loss',
                                                                                                                 'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.DistillationLoss._softmax': ( '10_compression/compression_dev.html#distillationloss._softmax',
                                                                                                      'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.calculate_sparsity': ( '10_compression/compression_dev.html#calculate_sparsity',
                                                                                               'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.compare_compression_techniques': ( '10_compression/compression_dev.html#compare_compression_techniques',
                                                                                                           'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.compute_neuron_importance': ( '10_compression/compression_dev.html#compute_neuron_importance',
                                                                                                      'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.prune_layer_neurons': ( '10_compression/compression_dev.html#prune_layer_neurons',
                                                                                                'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.prune_weights_by_magnitude': ( '10_compression/compression_dev.html#prune_weights_by_magnitude',
                                                                                                       'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.quantize_layer_weights': ( '10_compression/compression_dev.html#quantize_layer_weights',
                                                                                                   'tinytorch/core/compression.py'),
                                            'tinytorch.core.compression.setup_import_paths': ( '10_compression/compression_dev.html#setup_import_paths',
                                                                                               'tinytorch/core/compression.py')},
            'tinytorch.core.dataloader': { 'tinytorch.core.dataloader.DataLoader': ( '06_dataloader/dataloader_dev.html#dataloader',
                                                                                     'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.DataLoader.__init__': ( '06_dataloader/dataloader_dev.html#dataloader.__init__',
                                                                                              'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.DataLoader.__iter__': ( '06_dataloader/dataloader_dev.html#dataloader.__iter__',
                                                                                              'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.DataLoader.__len__': ( '06_dataloader/dataloader_dev.html#dataloader.__len__',
                                                                                             'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.Dataset': ( '06_dataloader/dataloader_dev.html#dataset',
                                                                                  'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.Dataset.__getitem__': ( '06_dataloader/dataloader_dev.html#dataset.__getitem__',
                                                                                              'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.Dataset.__len__': ( '06_dataloader/dataloader_dev.html#dataset.__len__',
                                                                                          'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.Dataset.get_num_classes': ( '06_dataloader/dataloader_dev.html#dataset.get_num_classes',
                                                                                                  'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.Dataset.get_sample_shape': ( '06_dataloader/dataloader_dev.html#dataset.get_sample_shape',
                                                                                                   'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.SimpleDataset': ( '06_dataloader/dataloader_dev.html#simpledataset',
                                                                                        'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.SimpleDataset.__getitem__': ( '06_dataloader/dataloader_dev.html#simpledataset.__getitem__',
                                                                                                    'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.SimpleDataset.__init__': ( '06_dataloader/dataloader_dev.html#simpledataset.__init__',
                                                                                                 'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.SimpleDataset.__len__': ( '06_dataloader/dataloader_dev.html#simpledataset.__len__',
                                                                                                'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader.SimpleDataset.get_num_classes': ( '06_dataloader/dataloader_dev.html#simpledataset.get_num_classes',
                                                                                                        'tinytorch/core/dataloader.py'),
                                           'tinytorch.core.dataloader._should_show_plots': ( '06_dataloader/dataloader_dev.html#_should_show_plots',
                                                                                             'tinytorch/core/dataloader.py')},
            'tinytorch.core.kernels': { 'tinytorch.core.kernels.cache_friendly_matmul': ( '11_kernels/kernels_dev.html#cache_friendly_matmul',
                                                                                          'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.matmul_baseline': ( '11_kernels/kernels_dev.html#matmul_baseline',
                                                                                    'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.parallel_batch_processing': ( '11_kernels/kernels_dev.html#parallel_batch_processing',
                                                                                              'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.parallel_relu': ( '11_kernels/kernels_dev.html#parallel_relu',
                                                                                  'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.quantized_matmul': ( '11_kernels/kernels_dev.html#quantized_matmul',
                                                                                     'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.quantized_relu': ( '11_kernels/kernels_dev.html#quantized_relu',
                                                                                   'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.time_kernel': ( '11_kernels/kernels_dev.html#time_kernel',
                                                                                'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.vectorized_operations': ( '11_kernels/kernels_dev.html#vectorized_operations',
                                                                                          'tinytorch/core/kernels.py'),
                                        'tinytorch.core.kernels.vectorized_relu': ( '11_kernels/kernels_dev.html#vectorized_relu',
                                                                                    'tinytorch/core/kernels.py')},
            'tinytorch.core.layers': { 'tinytorch.core.layers.Dense': ('03_layers/layers_dev.html#dense', 'tinytorch/core/layers.py'),
                                       'tinytorch.core.layers.Dense.__call__': ( '03_layers/layers_dev.html#dense.__call__',
                                                                                 'tinytorch/core/layers.py'),
                                       'tinytorch.core.layers.Dense.__init__': ( '03_layers/layers_dev.html#dense.__init__',
                                                                                 'tinytorch/core/layers.py'),
                                       'tinytorch.core.layers.Dense.forward': ( '03_layers/layers_dev.html#dense.forward',
                                                                                'tinytorch/core/layers.py'),
                                       'tinytorch.core.layers._should_show_plots': ( '03_layers/layers_dev.html#_should_show_plots',
                                                                                     'tinytorch/core/layers.py'),
                                       'tinytorch.core.layers.matmul_naive': ( '03_layers/layers_dev.html#matmul_naive',
                                                                               'tinytorch/core/layers.py')},
            'tinytorch.core.mlops': { 'tinytorch.core.mlops.DriftDetector': ( '13_mlops/mlops_dev.html#driftdetector',
                                                                              'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.DriftDetector.__init__': ( '13_mlops/mlops_dev.html#driftdetector.__init__',
                                                                                       'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.DriftDetector.detect_drift': ( '13_mlops/mlops_dev.html#driftdetector.detect_drift',
                                                                                           'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.DriftDetector.get_drift_history': ( '13_mlops/mlops_dev.html#driftdetector.get_drift_history',
                                                                                                'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.MLOpsPipeline': ( '13_mlops/mlops_dev.html#mlopspipeline',
                                                                              'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.MLOpsPipeline.__init__': ( '13_mlops/mlops_dev.html#mlopspipeline.__init__',
                                                                                       'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.MLOpsPipeline.check_system_health': ( '13_mlops/mlops_dev.html#mlopspipeline.check_system_health',
                                                                                                  'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.MLOpsPipeline.get_pipeline_status': ( '13_mlops/mlops_dev.html#mlopspipeline.get_pipeline_status',
                                                                                                  'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.MLOpsPipeline.start_monitoring': ( '13_mlops/mlops_dev.html#mlopspipeline.start_monitoring',
                                                                                               'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.ModelMonitor': ( '13_mlops/mlops_dev.html#modelmonitor',
                                                                             'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.ModelMonitor.__init__': ( '13_mlops/mlops_dev.html#modelmonitor.__init__',
                                                                                      'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.ModelMonitor.check_alerts': ( '13_mlops/mlops_dev.html#modelmonitor.check_alerts',
                                                                                          'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.ModelMonitor.get_performance_trend': ( '13_mlops/mlops_dev.html#modelmonitor.get_performance_trend',
                                                                                                   'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.ModelMonitor.record_performance': ( '13_mlops/mlops_dev.html#modelmonitor.record_performance',
                                                                                                'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.RetrainingTrigger': ( '13_mlops/mlops_dev.html#retrainingtrigger',
                                                                                  'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.RetrainingTrigger.__init__': ( '13_mlops/mlops_dev.html#retrainingtrigger.__init__',
                                                                                           'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.RetrainingTrigger.check_trigger_conditions': ( '13_mlops/mlops_dev.html#retrainingtrigger.check_trigger_conditions',
                                                                                                           'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.RetrainingTrigger.execute_retraining': ( '13_mlops/mlops_dev.html#retrainingtrigger.execute_retraining',
                                                                                                     'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops.RetrainingTrigger.get_retraining_history': ( '13_mlops/mlops_dev.html#retrainingtrigger.get_retraining_history',
                                                                                                         'tinytorch/core/mlops.py'),
                                      'tinytorch.core.mlops._should_show_plots': ( '13_mlops/mlops_dev.html#_should_show_plots',
                                                                                   'tinytorch/core/mlops.py')},
            'tinytorch.core.networks': { 'tinytorch.core.networks.Sequential': ( '04_networks/networks_dev.html#sequential',
                                                                                 'tinytorch/core/networks.py'),
                                         'tinytorch.core.networks.Sequential.__call__': ( '04_networks/networks_dev.html#sequential.__call__',
                                                                                          'tinytorch/core/networks.py'),
                                         'tinytorch.core.networks.Sequential.__init__': ( '04_networks/networks_dev.html#sequential.__init__',
                                                                                          'tinytorch/core/networks.py'),
                                         'tinytorch.core.networks.Sequential.forward': ( '04_networks/networks_dev.html#sequential.forward',
                                                                                         'tinytorch/core/networks.py'),
                                         'tinytorch.core.networks._should_show_plots': ( '04_networks/networks_dev.html#_should_show_plots',
                                                                                         'tinytorch/core/networks.py'),
                                         'tinytorch.core.networks.create_mlp': ( '04_networks/networks_dev.html#create_mlp',
                                                                                 'tinytorch/core/networks.py')},
            'tinytorch.core.optimizers': { 'tinytorch.core.optimizers.Adam': ( '08_optimizers/optimizers_dev.html#adam',
                                                                               'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.Adam.__init__': ( '08_optimizers/optimizers_dev.html#adam.__init__',
                                                                                        'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.Adam.step': ( '08_optimizers/optimizers_dev.html#adam.step',
                                                                                    'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.Adam.zero_grad': ( '08_optimizers/optimizers_dev.html#adam.zero_grad',
                                                                                         'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.SGD': ( '08_optimizers/optimizers_dev.html#sgd',
                                                                              'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.SGD.__init__': ( '08_optimizers/optimizers_dev.html#sgd.__init__',
                                                                                       'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.SGD.step': ( '08_optimizers/optimizers_dev.html#sgd.step',
                                                                                   'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.SGD.zero_grad': ( '08_optimizers/optimizers_dev.html#sgd.zero_grad',
                                                                                        'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.StepLR': ( '08_optimizers/optimizers_dev.html#steplr',
                                                                                 'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.StepLR.__init__': ( '08_optimizers/optimizers_dev.html#steplr.__init__',
                                                                                          'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.StepLR.get_lr': ( '08_optimizers/optimizers_dev.html#steplr.get_lr',
                                                                                        'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.StepLR.step': ( '08_optimizers/optimizers_dev.html#steplr.step',
                                                                                      'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.gradient_descent_step': ( '08_optimizers/optimizers_dev.html#gradient_descent_step',
                                                                                                'tinytorch/core/optimizers.py'),
                                           'tinytorch.core.optimizers.setup_import_paths': ( '08_optimizers/optimizers_dev.html#setup_import_paths',
                                                                                             'tinytorch/core/optimizers.py')},
            'tinytorch.core.setup': { 'tinytorch.core.setup.personal_info': ( '00_setup/setup_dev.html#personal_info',
                                                                              'tinytorch/core/setup.py'),
                                      'tinytorch.core.setup.system_info': ( '00_setup/setup_dev.html#system_info',
                                                                            'tinytorch/core/setup.py')},
            'tinytorch.core.tensor': { 'tinytorch.core.tensor.Tensor': ('01_tensor/tensor_dev.html#tensor', 'tinytorch/core/tensor.py'),
                                       'tinytorch.core.tensor.Tensor.__add__': ( '01_tensor/tensor_dev.html#tensor.__add__',
                                                                                 'tinytorch/core/tensor.py'),
                                       'tinytorch.core.tensor.Tensor.__init__': ( '01_tensor/tensor_dev.html#tensor.__init__',
                                                                                  'tinytorch/core/tensor.py'),
                                       'tinytorch.core.tensor.Tensor.__mul__': ( '01_tensor/tensor_dev.html#tensor.__mul__',
                                                                                 'tinytorch/core/tensor.py'),
                                       'tinytorch.core.tensor.Tensor.__repr__': ( '01_tensor/tensor_dev.html#tensor.__repr__',
                                                                                  'tinytorch/core/tensor.py'),
                                       'tinytorch.core.tensor.Tensor.__sub__': ( '01_tensor/tensor_dev.html#tensor.__sub__',
                                                                                 'tinytorch/core/tensor.py'),
                                       'tinytorch.core.tensor.Tensor.__truediv__': ( '01_tensor/tensor_dev.html#tensor.__truediv__',
                                                                                     'tinytorch/core/tensor.py'),
                                       'tinytorch.core.tensor.Tensor.add': ( '01_tensor/tensor_dev.html#tensor.add',
                                                                             'tinytorch/core/tensor.py'),
                                       'tinytorch.core.tensor.Tensor.data': ( '01_tensor/tensor_dev.html#tensor.data',
                                                                              'tinytorch/core/tensor.py'),
                                       'tinytorch.core.tensor.Tensor.dtype': ( '01_tensor/tensor_dev.html#tensor.dtype',
                                                                               'tinytorch/core/tensor.py'),
                                       'tinytorch.core.tensor.Tensor.multiply': ( '01_tensor/tensor_dev.html#tensor.multiply',
                                                                                  'tinytorch/core/tensor.py'),
                                       'tinytorch.core.tensor.Tensor.shape': ( '01_tensor/tensor_dev.html#tensor.shape',
                                                                               'tinytorch/core/tensor.py'),
                                       'tinytorch.core.tensor.Tensor.size': ( '01_tensor/tensor_dev.html#tensor.size',
                                                                              'tinytorch/core/tensor.py')},
            'tinytorch.core.training': { 'tinytorch.core.training.Accuracy': ( '09_training/training_dev.html#accuracy',
                                                                               'tinytorch/core/training.py'),
                                         'tinytorch.core.training.Accuracy.__call__': ( '09_training/training_dev.html#accuracy.__call__',
                                                                                        'tinytorch/core/training.py'),
                                         'tinytorch.core.training.Accuracy.__init__': ( '09_training/training_dev.html#accuracy.__init__',
                                                                                        'tinytorch/core/training.py'),
                                         'tinytorch.core.training.Accuracy.forward': ( '09_training/training_dev.html#accuracy.forward',
                                                                                       'tinytorch/core/training.py'),
                                         'tinytorch.core.training.BinaryCrossEntropyLoss': ( '09_training/training_dev.html#binarycrossentropyloss',
                                                                                             'tinytorch/core/training.py'),
                                         'tinytorch.core.training.BinaryCrossEntropyLoss.__call__': ( '09_training/training_dev.html#binarycrossentropyloss.__call__',
                                                                                                      'tinytorch/core/training.py'),
                                         'tinytorch.core.training.BinaryCrossEntropyLoss.__init__': ( '09_training/training_dev.html#binarycrossentropyloss.__init__',
                                                                                                      'tinytorch/core/training.py'),
                                         'tinytorch.core.training.BinaryCrossEntropyLoss.forward': ( '09_training/training_dev.html#binarycrossentropyloss.forward',
                                                                                                     'tinytorch/core/training.py'),
                                         'tinytorch.core.training.CrossEntropyLoss': ( '09_training/training_dev.html#crossentropyloss',
                                                                                       'tinytorch/core/training.py'),
                                         'tinytorch.core.training.CrossEntropyLoss.__call__': ( '09_training/training_dev.html#crossentropyloss.__call__',
                                                                                                'tinytorch/core/training.py'),
                                         'tinytorch.core.training.CrossEntropyLoss.__init__': ( '09_training/training_dev.html#crossentropyloss.__init__',
                                                                                                'tinytorch/core/training.py'),
                                         'tinytorch.core.training.CrossEntropyLoss.forward': ( '09_training/training_dev.html#crossentropyloss.forward',
                                                                                               'tinytorch/core/training.py'),
                                         'tinytorch.core.training.MeanSquaredError': ( '09_training/training_dev.html#meansquarederror',
                                                                                       'tinytorch/core/training.py'),
                                         'tinytorch.core.training.MeanSquaredError.__call__': ( '09_training/training_dev.html#meansquarederror.__call__',
                                                                                                'tinytorch/core/training.py'),
                                         'tinytorch.core.training.MeanSquaredError.__init__': ( '09_training/training_dev.html#meansquarederror.__init__',
                                                                                                'tinytorch/core/training.py'),
                                         'tinytorch.core.training.MeanSquaredError.forward': ( '09_training/training_dev.html#meansquarederror.forward',
                                                                                               'tinytorch/core/training.py'),
                                         'tinytorch.core.training.Trainer': ( '09_training/training_dev.html#trainer',
                                                                              'tinytorch/core/training.py'),
                                         'tinytorch.core.training.Trainer.__init__': ( '09_training/training_dev.html#trainer.__init__',
                                                                                       'tinytorch/core/training.py'),
                                         'tinytorch.core.training.Trainer.fit': ( '09_training/training_dev.html#trainer.fit',
                                                                                  'tinytorch/core/training.py'),
                                         'tinytorch.core.training.Trainer.train_epoch': ( '09_training/training_dev.html#trainer.train_epoch',
                                                                                          'tinytorch/core/training.py'),
                                         'tinytorch.core.training.Trainer.validate_epoch': ( '09_training/training_dev.html#trainer.validate_epoch',
                                                                                             'tinytorch/core/training.py'),
                                         'tinytorch.core.training.setup_import_paths': ( '09_training/training_dev.html#setup_import_paths',
                                                                                         'tinytorch/core/training.py')}}}
