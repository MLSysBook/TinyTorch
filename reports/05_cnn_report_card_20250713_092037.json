{
  "module_name": "05_cnn",
  "module_path": "modules/source/05_cnn",
  "analysis_date": "2025-07-13T09:20:37.729072",
  "total_lines": 1173,
  "total_cells": 13,
  "avg_cell_length": 70.61538461538461,
  "scaffolding_quality": 3,
  "complexity_distribution": {
    "1": 2,
    "2": 0,
    "3": 9,
    "4": 2,
    "5": 0
  },
  "learning_progression_quality": 4,
  "concepts_covered": [
    "Sparse connectivity",
    "Show the layer behavior",
    "Performance Considerations",
    "Network composition",
    "\ud83e\udde0 The Mathematical Foundation of Convolution",
    "ernel",
    "Returns",
    "Image",
    "Spatial hierarchy",
    "Composability",
    "Parameter efficiency",
    "\ud83e\uddea Quick Test: Flatten Function",
    "Autonomous driving",
    "Test Conv2D layer",
    "What You've Accomplished",
    "Sliding window",
    "Test different kernel sizes",
    "Run the comprehensive test suite",
    "Integration:",
    "Computer vision",
    "Feature maps",
    "Conv2D layer",
    "x",
    "Step 3: Flattening for Dense Layers",
    "Test case 2: 3x3 tensor",
    "Test case 1: 2x2 tensor",
    "EXAMPLE",
    "Production:",
    "Verify pipeline works",
    "\ud83e\uddea Quick Test: Conv2D Layer",
    "Test complete CNN pipeline",
    "pipelines",
    "Test case 3: Different shapes",
    "pipeline",
    "Show the convolution process",
    "Show the flattening behavior",
    "operations",
    "Use",
    "2",
    "Progress",
    "Build",
    "Learning Side:",
    "Final package structure:",
    "\ud83e\uddea Quick Test: Convolution Operation",
    "Module 5: CNN - Convolutional Neural Networks",
    "Test simple 3x3 input with 2x2 kernel",
    "Create a Conv2D layer",
    "3",
    "Test output shape",
    "Building Side:",
    "Understand",
    "Build \u2192 Use \u2192 Understand"
  ],
  "todo_count": 3,
  "hint_count": 3,
  "test_count": 1,
  "critical_issues": [
    "Module too long (1173 lines) - students will be overwhelmed",
    "6 cells are too long (>50 lines)"
  ],
  "overwhelm_points": [
    "Cell 1: Too many concepts (5)",
    "Cell 2: Very long cell (55 lines)",
    "Cell 3: Too many concepts (5)",
    "Cell 4: Long cell (32 lines)",
    "Cell 4: Too many concepts (5)",
    "Cell 5: Very long cell (81 lines)",
    "Cell 5: Complex implementation without error handling guidance",
    "Cell 6: Long cell (50 lines)",
    "Cell 6: High complexity without guidance",
    "Cell 6: Too many concepts (5)",
    "Cell 7: Very long cell (84 lines)",
    "Cell 7: Multiple functions in one cell (3)",
    "Cell 7: Complex implementation without error handling guidance",
    "Cell 8: Long cell (45 lines)",
    "Cell 8: Too many concepts (5)",
    "Cell 9: Long cell (47 lines)",
    "Cell 9: Complex implementation without error handling guidance",
    "Cell 10: Very long cell (51 lines)",
    "Cell 10: Too many concepts (5)",
    "Cell 11: Very long cell (316 lines)",
    "Cell 11: Too many concepts (5)",
    "Cell 11: Multiple functions in one cell (5)",
    "Cell 12: Very long cell (85 lines)",
    "Cell 12: High complexity without guidance",
    "Cell 12: Too many concepts (5)",
    "Cell 13: Long cell (46 lines)",
    "Cell 13: Too many concepts (5)"
  ],
  "recommendations": [
    "Break module into smaller sections or multiple modules",
    "Split 11 long cells into smaller, focused cells",
    "Add immediate feedback tests after implementations"
  ],
  "cell_analyses": [
    {
      "cell_type": "code",
      "line_count": 9,
      "char_count": 180,
      "complexity_score": 1,
      "educational_type": "demonstration",
      "has_todo": false,
      "has_hints": false,
      "concepts_introduced": [],
      "overwhelm_factors": [
        "Too many concepts (5)"
      ]
    },
    {
      "cell_type": "markdown",
      "line_count": 55,
      "char_count": 2701,
      "complexity_score": 3,
      "educational_type": "explanation",
      "has_todo": false,
      "has_hints": false,
      "concepts_introduced": [
        "Module 5: CNN - Convolutional Neural Networks",
        "Use",
        "Build",
        "Understand",
        "Build \u2192 Use \u2192 Understand"
      ],
      "overwhelm_factors": [
        "Very long cell (55 lines)"
      ]
    },
    {
      "cell_type": "markdown",
      "line_count": 17,
      "char_count": 783,
      "complexity_score": 1,
      "educational_type": "concept_introduction",
      "has_todo": false,
      "has_hints": false,
      "concepts_introduced": [
        "Final package structure:",
        "Production:",
        "Integration:",
        "Building Side:",
        "Learning Side:"
      ],
      "overwhelm_factors": [
        "Too many concepts (5)"
      ]
    },
    {
      "cell_type": "markdown",
      "line_count": 32,
      "char_count": 1539,
      "complexity_score": 3,
      "educational_type": "explanation",
      "has_todo": false,
      "has_hints": false,
      "concepts_introduced": [
        "Sparse connectivity",
        "Performance Considerations",
        "\ud83e\udde0 The Mathematical Foundation of Convolution",
        "Spatial hierarchy",
        "Parameter efficiency"
      ],
      "overwhelm_factors": [
        "Long cell (32 lines)",
        "Too many concepts (5)"
      ]
    },
    {
      "cell_type": "markdown",
      "line_count": 81,
      "char_count": 3841,
      "complexity_score": 3,
      "educational_type": "concept_introduction",
      "has_todo": true,
      "has_hints": true,
      "concepts_introduced": [
        "ernel",
        "Image",
        "Spatial hierarchy",
        "Parameter efficiency",
        "Autonomous driving"
      ],
      "overwhelm_factors": [
        "Very long cell (81 lines)",
        "Complex implementation without error handling guidance"
      ]
    },
    {
      "cell_type": "markdown",
      "line_count": 50,
      "char_count": 2480,
      "complexity_score": 4,
      "educational_type": "explanation",
      "has_todo": false,
      "has_hints": false,
      "concepts_introduced": [
        "\ud83e\uddea Quick Test: Convolution Operation",
        "Test simple 3x3 input with 2x2 kernel",
        "Show the convolution process",
        "Progress",
        "Test output shape"
      ],
      "overwhelm_factors": [
        "Long cell (50 lines)",
        "High complexity without guidance",
        "Too many concepts (5)"
      ]
    },
    {
      "cell_type": "markdown",
      "line_count": 84,
      "char_count": 3684,
      "complexity_score": 3,
      "educational_type": "concept_introduction",
      "has_todo": true,
      "has_hints": true,
      "concepts_introduced": [
        "Returns",
        "Composability",
        "Autonomous driving",
        "Conv2D layer",
        "x"
      ],
      "overwhelm_factors": [
        "Very long cell (84 lines)",
        "Multiple functions in one cell (3)",
        "Complex implementation without error handling guidance"
      ]
    },
    {
      "cell_type": "markdown",
      "line_count": 45,
      "char_count": 2098,
      "complexity_score": 3,
      "educational_type": "explanation",
      "has_todo": false,
      "has_hints": false,
      "concepts_introduced": [
        "Show the layer behavior",
        "Create a Conv2D layer",
        "\ud83e\uddea Quick Test: Conv2D Layer",
        "Test different kernel sizes",
        "Progress"
      ],
      "overwhelm_factors": [
        "Long cell (45 lines)",
        "Too many concepts (5)"
      ]
    },
    {
      "cell_type": "markdown",
      "line_count": 47,
      "char_count": 1897,
      "complexity_score": 3,
      "educational_type": "concept_introduction",
      "has_todo": true,
      "has_hints": true,
      "concepts_introduced": [
        "Network composition",
        "Returns",
        "x",
        "Step 3: Flattening for Dense Layers",
        "EXAMPLE"
      ],
      "overwhelm_factors": [
        "Long cell (47 lines)",
        "Complex implementation without error handling guidance"
      ]
    },
    {
      "cell_type": "markdown",
      "line_count": 51,
      "char_count": 2384,
      "complexity_score": 3,
      "educational_type": "explanation",
      "has_todo": false,
      "has_hints": false,
      "concepts_introduced": [
        "Test case 1: 2x2 tensor",
        "Test case 3: Different shapes",
        "\ud83e\uddea Quick Test: Flatten Function",
        "Show the flattening behavior",
        "3"
      ],
      "overwhelm_factors": [
        "Very long cell (51 lines)",
        "Too many concepts (5)"
      ]
    },
    {
      "cell_type": "markdown",
      "line_count": 316,
      "char_count": 15697,
      "complexity_score": 3,
      "educational_type": "concept_reinforcement",
      "has_todo": false,
      "has_hints": false,
      "concepts_introduced": [
        "operations",
        "pipelines",
        "pipeline",
        "2",
        "Run the comprehensive test suite"
      ],
      "overwhelm_factors": [
        "Very long cell (316 lines)",
        "Too many concepts (5)",
        "Multiple functions in one cell (5)"
      ]
    },
    {
      "cell_type": "markdown",
      "line_count": 85,
      "char_count": 4087,
      "complexity_score": 4,
      "educational_type": "explanation",
      "has_todo": false,
      "has_hints": false,
      "concepts_introduced": [
        "Test Conv2D layer",
        "Test case 2: 3x3 tensor",
        "Test case 1: 2x2 tensor",
        "Verify pipeline works",
        "Test complete CNN pipeline"
      ],
      "overwhelm_factors": [
        "Very long cell (85 lines)",
        "High complexity without guidance",
        "Too many concepts (5)"
      ]
    },
    {
      "cell_type": "markdown",
      "line_count": 46,
      "char_count": 2420,
      "complexity_score": 3,
      "educational_type": "concept_introduction",
      "has_todo": false,
      "has_hints": false,
      "concepts_introduced": [
        "Spatial hierarchy",
        "What You've Accomplished",
        "Sliding window",
        "Computer vision",
        "Feature maps"
      ],
      "overwhelm_factors": [
        "Long cell (46 lines)",
        "Too many concepts (5)"
      ]
    }
  ],
  "overall_grade": "C",
  "category_grades": {
    "Scaffolding": "C",
    "Complexity": "B",
    "Cell_Length": "D"
  },
  "vs_targets": {
    "Length": "\u274c Too long (1173 lines, target: 200-400)",
    "Cell_Length": "\u274c Too long (70.6 avg, target: \u226430)",
    "Complexity": "\u2705 Good (15.4% high-complexity)"
  },
  "vs_best_practices": [
    "Cell 2: Too many concepts (5)",
    "Cell 2: Too long (55 lines)",
    "Cell 3: Too many concepts (5)",
    "Cell 4: Too many concepts (5)",
    "Cell 4: Too long (32 lines)",
    "Cell 5: Too many concepts (5)",
    "Cell 5: Too long (81 lines)",
    "Cell 6: Too many concepts (5)",
    "Cell 6: Too long (50 lines)",
    "Cell 6: High complexity without guidance",
    "Cell 7: Too many concepts (5)",
    "Cell 7: Too long (84 lines)",
    "Cell 8: Too many concepts (5)",
    "Cell 8: Too long (45 lines)",
    "Cell 9: Too many concepts (5)",
    "Cell 9: Too long (47 lines)",
    "Cell 10: Too many concepts (5)",
    "Cell 10: Too long (51 lines)",
    "Cell 11: Too many concepts (5)",
    "Cell 11: Too long (316 lines)",
    "Cell 12: Too many concepts (5)",
    "Cell 12: Too long (85 lines)",
    "Cell 12: High complexity without guidance",
    "Cell 13: Too many concepts (5)",
    "Cell 13: Too long (46 lines)"
  ]
}