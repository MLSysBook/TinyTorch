# TinyTorch Milestone Configuration
# Defines the 3 epic achievements that transform students into ML engineers

milestones:
  1:
    name: "Machines Can See"
    title: "I taught a computer to recognize real images!"
    emoji: "üëÅÔ∏è"
    trigger_module: "05_dense"
    required_modules:
      - "01_setup"
      - "02_tensor" 
      - "03_activations"
      - "04_layers"
      - "05_dense"
    required_checkpoints:
      - "00"  # Environment
      - "01"  # Foundation
      - "02"  # Intelligence
      - "03"  # Components
      - "04"  # Networks
    victory_condition: "45%+ CIFAR-10 accuracy with MLP"
    capability: "I can create neural networks that recognize real RGB images!"
    real_world_impact: "Foundation for any computer vision system"
    dataset: "CIFAR-10"
    model_type: "Multi-Layer Perceptron (MLP)"
    test_file: "foundation/milestone.py"
    demo_description: "Watch YOUR dense layers and activations learn to recognize real-world RGB images"
    
  2:
    name: "I Can Train Real AI"
    title: "I built and trained a CNN from scratch!"
    emoji: "üèÜ"
    trigger_module: "11_training"
    required_modules:
      - "01_setup"
      - "02_tensor"
      - "03_activations" 
      - "04_layers"
      - "05_dense"
      - "06_spatial"
      - "07_attention"
      - "08_dataloader"
      - "09_autograd"
      - "10_optimizers"
      - "11_training"
    required_checkpoints:
      - "05"  # Learning (spatial)
      - "06"  # Attention
      - "07"  # Stability
      - "08"  # Differentiation
      - "09"  # Optimization
      - "10"  # Training
    victory_condition: "65%+ CIFAR-10 accuracy with CNN"
    capability: "I can train production-quality computer vision models!"
    real_world_impact: "Build vision systems like those used in autonomous vehicles"
    dataset: "CIFAR-10"
    model_type: "Convolutional Neural Network (CNN)"
    test_file: "revolution/milestone.py"
    demo_description: "Watch YOUR complete training pipeline learn to recognize real-world objects"
    
  3:
    name: "I Built GPT"
    title: "I created an AI that writes Python code!"
    emoji: "ü§ñ"
    trigger_module: "16_tinygpt"
    required_modules:
      - "01_setup"
      - "02_tensor"
      - "03_activations"
      - "04_layers" 
      - "05_dense"
      - "06_spatial"
      - "07_attention"
      - "08_dataloader"
      - "09_autograd"
      - "10_optimizers"
      - "11_training"
      - "12_compression"
      - "13_kernels"
      - "14_benchmarking"
      - "15_mlops"
      - "16_tinygpt"
    required_checkpoints:
      - "11"  # Regularization
      - "12"  # Kernels
      - "13"  # Benchmarking
      - "14"  # Deployment
      - "15"  # Capstone
    victory_condition: "Generate valid Python functions from natural language"
    capability: "I can build the future of AI - language models that write code!"
    real_world_impact: "Foundation technology behind GitHub Copilot and ChatGPT"
    dataset: "Python function dataset"
    model_type: "Transformer (TinyGPT)"
    test_file: "generation/milestone.py"
    demo_description: "Watch YOUR transformer generate Python functions from natural language"

# Milestone progression path
progression:
  - milestone: 1
    unlocks_after: "Module 05 completion + Checkpoints 00-04"
    celebrates: "Foundation of neural networks working on real data"
    
  - milestone: 2  
    unlocks_after: "Module 11 completion + Checkpoints 05-10"
    celebrates: "Complete ML training pipeline mastery"
    
  - milestone: 3
    unlocks_after: "Module 16 completion + Checkpoints 11-15"
    celebrates: "Building the future of AI - language generation"

# Module exercise tracking
module_exercise_mapping:
  milestone_1:
    description: "YOUR 5 core modules recognize real RGB images"
    modules_used:
      - module: "02_tensor"
        role: "Core mathematical operations"
      - module: "03_activations" 
        role: "Neural network intelligence (ReLU, Sigmoid)"
      - module: "04_layers"
        role: "Building block abstractions"
      - module: "05_dense"
        role: "Multi-layer network architecture"
        
  milestone_2:
    description: "YOUR 11 modules train a CNN from scratch"
    modules_used:
      - module: "06_spatial"
        role: "Convolutional operations for image processing"
      - module: "08_dataloader"
        role: "CIFAR-10 dataset loading and batching"
      - module: "09_autograd"
        role: "Automatic gradient computation"
      - module: "10_optimizers"
        role: "Adam optimizer for efficient training"
      - module: "11_training"
        role: "Complete training loop orchestration"
      # Plus all modules from milestone 1
        
  milestone_3:
    description: "YOUR complete 16-module framework generates Python code"
    modules_used:
      - module: "07_attention"
        role: "Transformer attention mechanisms"
      - module: "16_tinygpt"
        role: "Language model architecture"
      - module: "12_compression"
        role: "Model efficiency for deployment"
      - module: "15_mlops"
        role: "Production deployment pipeline"
      # Plus all modules from milestones 1 & 2