[build-system]
requires = ["setuptools>=64.0"]
build-backend = "setuptools.build_meta"

[project]
name="tinytorch"
version = "0.1.0"
description = "TinyTorch: Build ML Systems from Scratch"
readme = "README.md"
requires-python=">=3.8"
authors = [
    {name = "Vijay Janapa Reddi", email = "vj@eecs.harvard.edu"}
]
license = "MIT"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Education",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Education",
]
dependencies = [
    "numpy>=1.21.0",
]

[project.optional-dependencies]
dev = [
    "jupyter>=1.0.0",
    "jupyterlab>=3.0.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "rich>=12.0.0",  # For CLI development tools
    "pytest>=7.0.0",
    "pytest-timeout>=2.1.0",  # For test timeouts
]

# CLI development tools (separate from core framework)
[project.scripts]
tito = "tito.main:main"

[project.urls]
Homepage = "https://github.com/VJ/TinyTorch"
Documentation = "https://mlsysbook.github.io/TinyTorch/"
Repository = "https://github.com/VJ/TinyTorch"
Issues = "https://github.com/VJ/TinyTorch/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["tinytorch*", "tito*"]

[tool.uv]
cache-keys = [{ file = "pyproject.toml" }, { file = "settings.ini" }, { file = "setup.py" }]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
# Test timeouts and configuration
# timeout = 300  # 5 minutes timeout for all tests (requires pytest-timeout)
# timeout_method = "thread"  # Use thread-based timeout
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--strict-config",
    "--disable-warnings",
]
testpaths = [
    "tests",
]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
